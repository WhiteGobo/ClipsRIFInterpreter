Document( 
 Prefix(xs <http://www.w3.org/2001/XMLSchema#>)
 Prefix(rdf <http://www.w3.org/1999/02/22-rdf-syntax-ns#>) 
 Prefix(ex <http://example.org/example#>) 
 Prefix(func <http://www.w3.org/2007/rif-builtin-function#>) 
 Prefix(pred <http://www.w3.org/2007/rif-builtin-predicate#>) 

 Group ( 
  ex:ok(0) :- 
     External( pred:is-literal-PlainLiteral( "Hello world@en"^^rdf:PlainLiteral ) )
  ex:ok(1) :- 
     External( pred:is-literal-PlainLiteral( "Hello world@"^^rdf:PlainLiteral ) )
  ex:ok(2) :- 
     External( pred:is-literal-not-PlainLiteral( "1"^^xs:integer ) )
  ex:ok(3) :- 
     External( pred:is-literal-PlainLiteral( External( rdf:PlainLiteral ("1"^^xs:integer ) ) ) )
  ex:ok(4) :- 
     External( func:PlainLiteral-from-string-lang( "Hello World!" "en" ) ) = "Hello World!"@en
  ex:ok(5) :- 
     External( func:string-from-PlainLiteral( "Hello World!"@en ) ) = "Hello World!"
  ex:ok(6) :- 
     External( func:string-from-PlainLiteral( "Hello World!@en" ) )= "Hello World!@en"
  ex:ok(7) :- 
     External( func:lang-from-PlainLiteral( "Hello World!@en"^^rdf:PlainLiteral ) )= "en"^^xs:lang
  ex:ok(8) :- 
     External( func:lang-from-PlainLiteral( "Hello World!@en" ) ) = ""
  ex:ok(9) :- 
     -1 = External ( func:PlainLiteral-compare( "hallo"@de "welt"@de ) )
  ex:ok(10) :- 
     1 = External ( func:PlainLiteral-compare( "welt"@de "hallo"@de ) )
  ex:ok(11) :- 
     0 = External ( func:PlainLiteral-compare( "hallo"@de "hallo"@de ) )
  ex:ok(12) :- 
     External ( pred:matches-language-range( "Schlagobers ist dasselbe wie Schlagsahne."@de-at "de-*" ) )
 )
)
