;mydescription

;autogenerated group rules

(defrule rule-gen4707 
	(TripleTemplate
		(subject ?rifassert)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Assert>))
		(TripleTemplate
		(subject ?rifassert)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?riftarget))
		(TripleTemplate
		(subject ?riftarget)
		(predicate <http://example.com/as-rhspattern>)
		(object ?clipsfact))
		=>
(bind ?clipsaction (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifassert)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsaction ))))
	(assert 	(TripleTemplate
		(subject ?clipsaction)
		(predicate <http://clips.script/assert>)
		(object ?clipsfact)))

)

(defrule rule-gen4717 
	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/as-rhspattern>)
		(object ?clipsfact))
		=>
(bind ?clipsaction (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsaction ))))
	(assert 	(TripleTemplate
		(subject ?clipsaction)
		(predicate <http://clips.script/assert>)
		(object ?clipsfact)))

)

(defrule rule-gen4724 
	(TripleTemplate
		(subject ?rifretract)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Retract>))
		(TripleTemplate
		(subject ?rifretract)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?riftarget))
		(TripleTemplate
		(subject ?riftarget)
		(predicate <http://example.com/as-expression>)
		(object ?subj))
		=>
(bind ?clipsexpand (<http://white.gobo/new-blanknode>))(bind ?clipsfindfacts (<http://white.gobo/new-blanknode>))(bind ?clipsretract (<http://white.gobo/new-blanknode>))(bind ?slotsubj (<http://white.gobo/new-blanknode>))(bind ?factvariable (<http://white.gobo/new-blanknode>))(bind ?factquery (<http://white.gobo/new-blanknode>))(bind ?clipsdeftemplate (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifretract)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsretract ))))
	(assert 	(TripleTemplate
		(subject ?clipsretract)
		(predicate <http://clips.script/function-name>)
		(object "retract")))
	(assert 	(TripleTemplate
		(subject ?clipsretract)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsexpand ))))
	(assert 	(TripleTemplate
		(subject ?clipsexpand)
		(predicate <http://clips.script/function-name>)
		(object "expand%24")))
	(assert 	(TripleTemplate
		(subject ?clipsexpand)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsfindfacts ))))
	(assert 	(TripleTemplate
		(subject ?clipsfindfacts)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/FindAllFacts>)))
	(assert 	(TripleTemplate
		(subject ?clipsfindfacts)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/deftemplate-name>)
		(object "TripleTemplate")))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object ?factvariable)))
	(assert 	(TripleTemplate
		(subject ?clipsfindfacts)
		(predicate <http://clips.script/query>)
		(object ?factquery)))
	(assert 	(TripleTemplate
		(subject ?factvariable)
		(predicate <http://clips.script/variable-name>)
		(object "fct")))
	(assert 	(TripleTemplate
		(subject ?factquery)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?factquery)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsubj ?subj ))))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-variable>)
		(object ?factvariable)))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-slot-name>)
		(object "subject")))

)

(defrule rule-gen4734 
	(TripleTemplate
		(subject ?rifretract)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Retract>))
		(TripleTemplate
		(subject ?rifretract)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?riftarget))
		(TripleTemplate
		(subject ?riftarget)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
		=>
(bind ?clipsretract (<http://white.gobo/new-blanknode>))(bind ?clipsexpand (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifretract)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsretract ))))
	(assert 	(TripleTemplate
		(subject ?clipsretract)
		(predicate <http://clips.script/function-name>)
		(object "retract")))
	(assert 	(TripleTemplate
		(subject ?clipsretract)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsexpand ))))
	(assert 	(TripleTemplate
		(subject ?clipsexpand)
		(predicate <http://clips.script/function-name>)
		(object "expand%24")))
	(assert 	(TripleTemplate
		(subject ?clipsexpand)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen4744 
(or 	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#if>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#payload>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?child))
	)
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child)))

)

(defrule rule-gen4772 
	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?childkey))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?childvalue))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?childkey)))
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?childvalue)))

)

(defrule rule-gen4782 
(or 	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#actions>)
		(object ?childlist))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?childlist ))
	(or 	(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Group>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Atom>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Assert>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Retract>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Do>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Modify>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Subclass>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Equal>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Member>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?childlist ?child ))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child)))

)

(defrule rule-gen4825 
	(TripleTemplate
		(subject ?rifdo)
		(predicate <http://www.w3.org/2007/rif#actionVar>)
		(object ?actionvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?actionvar ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifvar ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifframe ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifframe)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifdo)))

)

(defrule rule-gen4835 
	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child))
		(TripleTemplate
		(subject ?child)
		(predicate <http://example.com/inherits-data>)
		(object ?grandchild))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?grandchild)))

)
;autogenerated group rules

(defrule rule-gen4842 
	(TripleTemplate
		(subject ?rifdo)
		(predicate <http://www.w3.org/2007/rif#actionVar>)
		(object ?actionvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?actionvar ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifvar ))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifdo)))

)

(defrule rule-gen4849 
	(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#vars>)
		(object ?varlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?varlist ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?varlist ?rifvar ))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifforall)))

)

(defrule rule-gen4856 
	(TripleTemplate
		(subject ?varparent)
		(predicate <http://example.com/inherits-data>)
		(object ?varchild))
		(TripleTemplate
		(subject ?varparent)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?varchild)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?varparent)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar))
		=>
	(assert 	(TripleTemplate
		(subject ?varchild)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar)))
	(assert 	(TripleTemplate
		(subject ?varchild)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsvar)))

)
;autogenerated group rules

(defrule rule-gen4869 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#value>)
		(object ?value))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/string>)
		(object (<http://white.gobo/literal-to-clipsconstant> ?value ))))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen4873 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object ?iristring))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/symbol>)
		(object (<http://white.gobo/iri-to-clipsconstant> ?iristring ))))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen4877 
	(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?rifframe))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?object))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-greater-than> (<http://www.w3.org/2007/rif-builtin-function#count> ?slotlist ) "1^^http://www.w3.org/2001/XMLSchema#integer" ))
		=>
(bind ?newframerest (<http://white.gobo/new-blanknode>))(bind ?newframefirst (<http://white.gobo/new-blanknode>))	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?rifforall) (and (eq ?fct:predicate <http://www.w3.org/2007/rif#pattern>)(eq ?fct:object ?rifframe)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?newframefirst)))
	(assert 	(TripleTemplate
		(subject ?newframefirst)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>)))
	(assert 	(TripleTemplate
		(subject ?newframefirst)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?object)))
	(assert 	(TripleTemplate
		(subject ?newframefirst)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object (<http://www.w3.org/2007/rif-builtin-function#sublist> ?slotlist "0^^http://www.w3.org/2001/XMLSchema#integer" "1^^http://www.w3.org/2001/XMLSchema#integer" ))))
	(assert 	(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?newframerest)))
	(assert 	(TripleTemplate
		(subject ?newframerest)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>)))
	(assert 	(TripleTemplate
		(subject ?newframerest)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?object)))
	(assert 	(TripleTemplate
		(subject ?newframerest)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?slotlist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))

)

(defrule rule-gen4887 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
		(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?object))
		(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(TripleTemplate
		(subject ?object)
		(predicate <http://example.com/as-expression>)
		(object ?expressionsubject))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
		(TripleTemplate
		(subject ?slotkey)
		(predicate <http://example.com/as-expression>)
		(object ?expressionpredicate))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?slotvalue))
		(TripleTemplate
		(subject ?slotvalue)
		(predicate <http://example.com/as-expression>)
		(object ?expressionobject))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
(bind ?slotobject (<http://white.gobo/new-blanknode>))(bind ?clipsnode (<http://white.gobo/new-blanknode>))(bind ?slotpredicate (<http://white.gobo/new-blanknode>))(bind ?slotsubject (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-rhspattern>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/deftemplate-name>)
		(object "TripleTemplate")))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsubject ?slotpredicate ?slotobject ))))
	(assert 	(TripleTemplate
		(subject ?slotsubject)
		(predicate <http://clips.script/slot-name>)
		(object "subject")))
	(assert 	(TripleTemplate
		(subject ?slotsubject)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressionsubject ))))
	(assert 	(TripleTemplate
		(subject ?slotpredicate)
		(predicate <http://clips.script/slot-name>)
		(object "predicate")))
	(assert 	(TripleTemplate
		(subject ?slotpredicate)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressionpredicate ))))
	(assert 	(TripleTemplate
		(subject ?slotobject)
		(predicate <http://clips.script/slot-name>)
		(object "object")))
	(assert 	(TripleTemplate
		(subject ?slotobject)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressionobject ))))

)

(defrule rule-gen4912 
	(TripleTemplate
		(subject ?frame)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
		=>
	(assert 	(Member
		(instance ?frame)
		(class <http://example.com/construct-as-conditional>)))
	(assert 	(TripleTemplate
		(subject ?frame)
		(predicate <http://example.com/in-as-conditional>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen4916 
	(TripleTemplate
		(subject ?rifineg)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#INeg>))
		(TripleTemplate
		(subject ?rifineg)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?formula))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://example.com/as-conditional>)
		(object ?clipsconditional))
		=>
(bind ?notCE (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifineg)
		(predicate <http://example.com/as-conditional>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?notCE ))))
	(assert 	(TripleTemplate
		(subject ?notCE)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/NotCE>)))
	(assert 	(TripleTemplate
		(subject ?notCE)
		(predicate <http://clips.script/conditional-element>)
		(object ?clipsconditional)))

)

(defrule rule-gen4926 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/in-as-conditional>)
		(object ?existingconditionals))
	(not(exists (and 	(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Slot>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
	(not 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/used-slot-for-conditional>)
		(object ?slot)))
	)))
		=>
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-conditional>)
		(object ?existingconditionals)))

)

(defrule rule-gen4936 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
		(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?object))
		(TripleTemplate
		(subject ?object)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintsubject))
		(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
		(TripleTemplate
		(subject ?slotkey)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintpredicate))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?slotvalue))
		(TripleTemplate
		(subject ?slotvalue)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintobject))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		(TripleTemplate
		(subject ?constraintsubject)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object ?additionalconditionalssubject))
		(TripleTemplate
		(subject ?constraintpredicate)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object ?additionalconditionalspredicate))
		(TripleTemplate
		(subject ?constraintobject)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object ?additionalconditionalsobject))
		(Member
		(instance ?rifnode)
		(class <http://example.com/construct-as-conditional>))
	(not 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/used-slot-for-conditional>)
		(object ?slot)))
		=>
(bind ?slotsubject (<http://white.gobo/new-blanknode>))(bind ?clipsconditionalelement (<http://white.gobo/new-blanknode>))(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?rifnode) (eq ?trpl:predicate <http://example.com/in-as-conditional>))
		(bind ?existingconditionals ?trpl:object))(bind ?slotobject (<http://white.gobo/new-blanknode>))(bind ?slotpredicate (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/used-slot-for-conditional>)
		(object ?slot)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?rifnode)
			(eq ?fct:predicate <http://example.com/in-as-conditional>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/in-as-conditional>)
		(object (<http://www.w3.org/2007/rif-builtin-function#concatenate> ?existingconditionals ?additionalconditionalssubject ?additionalconditionalspredicate ?additionalconditionalsobject (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsconditionalelement ) ))))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/binds-variables>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/unbound-variables>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))
	(assert 	(TripleTemplate
		(subject ?clipsconditionalelement)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/TemplatePatternCE>)))
	(assert 	(TripleTemplate
		(subject ?clipsconditionalelement)
		(predicate <http://clips.script/deftemplate-name>)
		(object "TripleTemplate")))
	(assert 	(TripleTemplate
		(subject ?clipsconditionalelement)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsubject ?slotpredicate ?slotobject ))))
	(assert 	(TripleTemplate
		(subject ?slotsubject)
		(predicate <http://clips.script/slot-name>)
		(object "subject")))
	(assert 	(TripleTemplate
		(subject ?slotsubject)
		(predicate <http://clips.script/constraint>)
		(object ?constraintsubject)))
	(assert 	(TripleTemplate
		(subject ?slotpredicate)
		(predicate <http://clips.script/slot-name>)
		(object "predicate")))
	(assert 	(TripleTemplate
		(subject ?slotpredicate)
		(predicate <http://clips.script/constraint>)
		(object ?constraintpredicate)))
	(assert 	(TripleTemplate
		(subject ?slotobject)
		(predicate <http://clips.script/slot-name>)
		(object "object")))
	(assert 	(TripleTemplate
		(subject ?slotobject)
		(predicate <http://clips.script/constraint>)
		(object ?constraintobject)))

)
;autogenerated group rules

(defrule rule-gen4972 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#actions>)
		(object ?actionlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?actionlist ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/in-transform-do>)
		(object ?actionlist)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/out-transform-do>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen4976 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/in-transform-do>)
		(object ?in))
	(test (eq "0^^http://www.w3.org/2001/XMLSchema#integer"(<http://www.w3.org/2007/rif-builtin-function#count> ?in )))
		(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/out-transform-do>)
		(object ?out))
		=>
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-action>)
		(object ?out)))
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?rifnode) (and (eq ?fct:predicate <http://example.com/in-transform-do>)(eq ?fct:object ?in)))
		(retract ?fct))	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?rifnode) (and (eq ?fct:predicate <http://example.com/out-transform-do>)(eq ?fct:object ?out)))
		(retract ?fct))
)

(defrule rule-gen4983 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/in-transform-do>)
		(object ?in))
		(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/out-transform-do>)
		(object ?out))
		(TripleTemplate
		(subject ?firstaction)
		(predicate <http://example.com/as-action>)
		(object ?nextactions))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-not-equal> "0^^http://www.w3.org/2001/XMLSchema#integer" (<http://www.w3.org/2007/rif-builtin-function#count> ?in ) ))
	(test (eq ?firstaction(<http://www.w3.org/2007/rif-builtin-function#get> ?in "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?rifnode)
			(eq ?fct:predicate <http://example.com/in-transform-do>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/in-transform-do>)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?in "0^^http://www.w3.org/2001/XMLSchema#integer" ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?rifnode)
			(eq ?fct:predicate <http://example.com/out-transform-do>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/out-transform-do>)
		(object (<http://www.w3.org/2007/rif-builtin-function#concatenate> ?out ?nextactions ))))

)
;autogenerated group rules

(defrule rule-gen4993 
	(TripleTemplate
		(subject ?group)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?sentences))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?sentences ))
	(exists (and (or 	(TripleTemplate
		(subject ?factable)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
		(TripleTemplate
		(subject ?factable)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Member>))
		(TripleTemplate
		(subject ?factable)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Atom>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?sentences ?factable ))
	))
		=>
(bind ?deffacts (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?group)
		(predicate <http://example.com/combine-deffacts-in>)
		(object ?deffacts)))
	(assert 	(TripleTemplate
		(subject ?deffacts)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/Deffacts>)))
	(assert 	(TripleTemplate
		(subject ?deffacts)
		(predicate <http://clips.script/rhs-pattern>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen5006 
	(TripleTemplate
		(subject ?group)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?sentences))
		(TripleTemplate
		(subject ?group)
		(predicate <http://example.com/combine-deffacts-in>)
		(object ?deffacts))
	(or 	(TripleTemplate
		(subject ?factable)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
		(TripleTemplate
		(subject ?factable)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Member>))
		(TripleTemplate
		(subject ?factable)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Atom>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?sentences ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?sentences ?factable ))
		(TripleTemplate
		(subject ?factable)
		(predicate <http://example.com/as-rhspattern>)
		(object ?newrhspattern))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?deffacts) (eq ?trpl:predicate <http://clips.script/rhs-pattern>))
		(bind ?rhspatternlist ?trpl:object))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?deffacts)
			(eq ?fct:predicate <http://clips.script/rhs-pattern>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?deffacts)
		(predicate <http://clips.script/rhs-pattern>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?rhspatternlist ?newrhspattern ))))

)
;autogenerated group rules

(defrule rule-gen5025 (declare (salience 10))
	(TripleTemplate
		(subject ?group)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?sentences))
		(TripleTemplate
		(subject ?rule)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Implies>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?sentences ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?sentences ?rule ))
		(TripleTemplate
		(subject ?rule)
		(predicate <http://www.w3.org/2007/rif#if>)
		(object ?rifcondition))
		(TripleTemplate
		(subject ?rifcondition)
		(predicate <http://example.com/as-conditional>)
		(object ?clipsconditions))
		(TripleTemplate
		(subject ?rule)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?rifaction))
		(TripleTemplate
		(subject ?rifaction)
		(predicate <http://example.com/as-action>)
		(object ?clipsactions))
		=>
(bind ?actionlist (<http://white.gobo/new-blanknode>))(bind ?defrule (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rule)
		(predicate <http://example.com/translate-implies-to-defrule>)
		(object ?defrule)))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/Defrule>)))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://clips.script/conditional-element>)
		(object ?clipsconditions)))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://clips.script/action>)
		(object ?clipsactions)))

)

(defrule rule-gen5044 (declare (salience 10))
	(TripleTemplate
		(subject ?rule)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?rule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?formula))
	(not(exists 	(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?rule))))
		=>
(bind ?defrule (<http://white.gobo/new-blanknode>))(bind ?actionlist (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/Defrule>)))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/uses-patterns-as-conditional>)
		(object ?rule)))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/out-as-conditional>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/uses-action-from>)
		(object ?formula)))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variables>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))

)

(defrule rule-gen5054 (declare (salience 10))
	(TripleTemplate
		(subject ?rule)
		(predicate <http://example.com/uses-action-from>)
		(object ?formula))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://example.com/as-action>)
		(object ?actionlist))
		=>
	(assert 	(TripleTemplate
		(subject ?rule)
		(predicate <http://clips.script/action>)
		(object ?actionlist)))

)

(defrule rule-gen5061 (declare (salience 10))
	(TripleTemplate
		(subject ?clipsrule)
		(predicate <http://example.com/uses-as-conditional>)
		(object ?rifrule))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://example.com/as-conditional>)
		(object ?conditionlist))
		=>
	(assert 	(TripleTemplate
		(subject ?clipsrule)
		(predicate <http://clips.script/conditional-element>)
		(object ?conditionlist)))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen5068 (declare (salience 20))
	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/uses-patterns-as-conditional>)
		(object ?rifrule))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?pattern))
		(TripleTemplate
		(subject ?pattern)
		(predicate <http://example.com/as-conditional>)
		(object ?patternconditions))
		(TripleTemplate
		(subject ?pattern)
		(predicate <http://example.com/unbound-variables>)
		(object ?neededboundvars))
		(TripleTemplate
		(subject ?pattern)
		(predicate <http://example.com/binds-variables>)
		(object ?newsuppliedboundvars))
		(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variables>)
		(object ?suppliedboundvars))
	(test (eq (<http://www.w3.org/2007/rif-builtin-function#make-list>)(<http://www.w3.org/2007/rif-builtin-function#except> ?neededboundvars ?suppliedboundvars )))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/added-pattern>)
		(object ?pattern)))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?defrule) (eq ?trpl:predicate <http://example.com/out-as-conditional>))
		(bind ?currentconditions ?trpl:object))	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/implemented-pattern>)
		(object ?pattern)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?defrule)
			(eq ?fct:predicate <http://example.com/out-as-conditional>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/out-as-conditional>)
		(object (<http://www.w3.org/2007/rif-builtin-function#concatenate> ?currentconditions ?patternconditions ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?defrule)
			(eq ?fct:predicate <http://example.com/bound-variables>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variables>)
		(object (<http://www.w3.org/2007/rif-builtin-function#union> ?suppliedboundvars ?suppliedboundvars ))))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/added-pattern>)
		(object ?pattern)))

)
;autogenerated group rules

(defrule rule-gen5087 (declare (salience 3))
	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/uses-patterns-as-conditional>)
		(object ?rifrule))
	(not(exists (and 	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?pattern))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/added-pattern>)
		(object ?pattern)))
	)))
		(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/out-as-conditional>)
		(object ?conditional))
		=>
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://clips.script/conditional-element>)
		(object ?conditional)))

)
;autogenerated group rules

(defrule rule-gen5097 
	(TripleTemplate
		(subject ?directive)
		(predicate <http://www.w3.org/2007/rif#location>)
		(object ?location))
		(TripleTemplate
		(subject ?directive)
		(predicate <http://www.w3.org/2007/rif#profile>)
		(object ?profile))
		=>
(<http://white.gobo/import> ?location ?profile )
)

(defrule rule-gen5104 
	(TripleTemplate
		(subject ?directive)
		(predicate <http://www.w3.org/2007/rif#location>)
		(object ?location))
	(not(exists 	(TripleTemplate
		(subject ?directive)
		(predicate <http://www.w3.org/2007/rif#profile>)
		(object ?profile))))
		=>
	(assert 	(TripleTemplate
		(subject ?directive)
		(predicate <http://www.w3.org/2007/rif#profile>)
		(object <http://www.w3.org/ns/entailment/RIF>)))

)
;autogenerated group rules

(defrule rule-gen5111 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate ?prop)
		(object <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil>))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate ?prop)(eq ?fct:object <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil>)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?base)
		(predicate ?prop)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))

)

(defrule rule-gen5115 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object ?list))
	(not(exists 	(TripleTemplate
		(subject ?s)
		(predicate ?p)
		(object ?base))))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://example.com/triples-to-rdf#as-list>)(eq ?fct:object ?list)))
		(retract ?fct))
)

(defrule rule-gen5122 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>)
		(object ?rest))
		(TripleTemplate
		(subject ?base)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#first>)
		(object ?first))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rest ))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>)(eq ?fct:object ?rest)))
		(retract ?fct))	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#first>)(eq ?fct:object ?first)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?base)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object (<http://www.w3.org/2007/rif-builtin-function#insert-before> ?rest "0^^http://www.w3.org/2001/XMLSchema#integer" ?first ))))

)

(defrule rule-gen5129 (declare (salience 100))
	(TripleTemplate
		(subject ?subject)
		(predicate ?prop)
		(object ?listbase))
		(TripleTemplate
		(subject ?listbase)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object ?aslist))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?subject) (and (eq ?fct:predicate ?prop)(eq ?fct:object ?listbase)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?subject)
		(predicate ?prop)
		(object ?aslist)))

)
;autogenerated group rules

(defrule rule-gen5136 (declare (salience 90))
	(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?innerrule)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?innerrule))
		(TripleTemplate
		(subject ?innerrule)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?pattern))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?innerrule) (and (eq ?fct:predicate <http://www.w3.org/2007/rif#pattern>)(eq ?fct:object ?pattern)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?pattern)))

)

(defrule rule-gen5149 (declare (salience 90))
	(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?innerrule)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?innerrule))
		(TripleTemplate
		(subject ?innerrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?action))
	(not(exists 	(TripleTemplate
		(subject ?innerrule)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?pattern))))
		=>
	(assert 	(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?action)))
	(do-for-all-facts ((?fct TripleTemplate)) (eq ?fct:subject ?innerrule)
		(retract ?fct))
)

(defrule rule-gen5165 (declare (salience 90))
	(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?implies))
		(TripleTemplate
		(subject ?implies)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Implies>))
		(TripleTemplate
		(subject ?implies)
		(predicate <http://www.w3.org/2007/rif#if>)
		(object ?formula))
		(TripleTemplate
		(subject ?implies)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?action))
		=>
	(assert 	(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?formula)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?outerrule)
			(eq ?fct:predicate <http://www.w3.org/2007/rif#formula>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?outerrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?action)))
	(do-for-all-facts ((?fct TripleTemplate)) (eq ?fct:subject ?implies)
		(retract ?fct))
)
