;mydescription

;autogenerated group rules

(defrule rule-gen13012 (declare (salience 10))
	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://example.com/add-rule-info>)
		(object ?defrule))
	(or 	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?rifaction))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?rifaction))
	)
		(TripleTemplate
		(subject ?rifaction)
		(predicate <http://example.com/as-action>)
		(object ?action))
		=>
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://clips.script/action>)
		(object ?action)))

)

(defrule rule-gen13025 (declare (salience 10))
	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://example.com/add-rule-info>)
		(object ?defrule))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?rifclause))
	(or 	(Member
		(instance ?rifclause)
		(class <http://www.w3.org/2007/rif#Forall>))
		(Member
		(instance ?rifclause)
		(class <http://www.w3.org/2007/rif#Implies>))
	)
		=>
	(assert 	(TripleTemplate
		(subject ?rifclause)
		(predicate <http://example.com/add-rule-info>)
		(object ?defrule)))

)

(defrule rule-gen13036 (declare (salience 10))
	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://example.com/add-rule-info>)
		(object ?defrule))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#if>)
		(object ?rifcondition))
		=>
	(assert 	(TripleTemplate
		(subject ?rifcondition)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule)))

)

(defrule rule-gen13043 (declare (salience 10))
	(TripleTemplate
		(subject ?rifcondition)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule))
		(Member
		(instance ?rifcondition)
		(class <http://www.w3.org/2007/rif#And>))
		(Member
		(instance ?defrule)
		(class <http://clips.script/Defrule>))
		(TripleTemplate
		(subject ?rifcondition)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?formulalist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?formulalist ))
	(or 	(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#And>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Or>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Exists>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#INeg>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#SubClass>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Equal>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?formulalist ?formula ))
		=>
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule)))
	(assert 	(TripleTemplate
		(subject ?rifcondition)
		(predicate <http://example.com/used-as-pattern-in>)
		(object ?defrule)))

)

(defrule rule-gen13072 (declare (salience 10))
	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://example.com/add-rule-info>)
		(object ?defrule))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?rifclause))
		(Member
		(instance ?rifclause)
		(class <http://www.w3.org/2007/rif#Implies>))
		=>
	(assert 	(TripleTemplate
		(subject ?rifclause)
		(predicate <http://example.com/add-rule-info>)
		(object ?defrule)))

)
;autogenerated group rules

(defrule rule-gen13081 
	(Member
		(instance ?factvar)
		(class <http://clips.script/Defrule>))
		(Atom
		(op <http://example.com/currentdefruleindex>)
		(args ?defruleindex ))
	(not(exists 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://clips.script/rule-name>)
		(object ?defrulename))))
		=>
	(do-for-all-facts ((?fct Atom)) (and (eq ?fct:op <http://example.com/currentdefruleindex>) (eq ?fct:args (eq ?fct:args (create$  ?defruleindex))))
		(retract ?fct))	(assert 	(Atom
		(op <http://example.com/currentdefruleindex>)
		(args (<http://www.w3.org/2007/rif-builtin-function#numeric-add> ?defruleindex "1^^http://www.w3.org/2001/XMLSchema#integer" ) )))
	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/rule-name>)
		(object (<http://www.w3.org/2007/rif-builtin-function#concat> "rule" ?defruleindex ))))

)
(deffacts rule-gen13089
		(Atom
		(op <http://example.com/currentdefruleindex>)
		(args "0^^http://www.w3.org/2001/XMLSchema#integer" )))


(defrule rule-gen13090 (declare (salience 10))
(or 	(TripleTemplate
		(subject ?rifparent)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?rifformula))
		(TripleTemplate
		(subject ?rifparent)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?rifformula))
	)
	(or 	(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Frame>))
	)
		=>
	(assert 	(Member
		(instance ?rifformula)
		(class <http://example.com/RHSPatternGenerator>)))

)

(defrule rule-gen13101 (declare (salience 10))
	(TripleTemplate
		(subject ?rifparent)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?sentencelist))
	(or 	(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Frame>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?sentencelist ?rifformula ))
		=>
	(assert 	(Member
		(instance ?rifformula)
		(class <http://example.com/RHSPatternGenerator>)))

)

(defrule rule-gen13109 (declare (salience 10))
	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?constraintlist))
	(or 	(Member
		(instance ?rifterm)
		(class <http://www.w3.org/2007/rif#Var>))
		(Member
		(instance ?rifterm)
		(class <http://www.w3.org/2007/rif#Const>))
		(Member
		(instance ?rifterm)
		(class <http://www.w3.org/2007/rif#List>))
		(Member
		(instance ?rifterm)
		(class <http://www.w3.org/2007/rif#External>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?constraintlist ?rifterm ))
		=>
	(assert 	(Member
		(instance ?rifterm)
		(class <http://example.com/ConstraintGenerator>)))

)

(defrule rule-gen13124 (declare (salience 10))
	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?rifterm))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
	(assert 	(Member
		(instance ?rifterm)
		(class <http://example.com/ConstraintGenerator>)))

)

(defrule rule-gen13134 (declare (salience 10))
	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?rifterm))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
	(assert 	(Member
		(instance ?rifterm)
		(class <http://example.com/ConstraintGenerator>)))

)

(defrule rule-gen13144 (declare (salience 10))
	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule))
	(or 	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifterm))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?rifterm))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifterm))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?rifterm))
	)
		=>
	(assert 	(Member
		(instance ?rifterm)
		(class <http://example.com/ConstraintGenerator>)))

)
;autogenerated group rules

(defrule rule-gen13160 
	(Member
		(instance ?rifmember)
		(class <http://white.gobo/modelA#SubclassPatternGenerator>))
		(TripleTemplate
		(subject ?rifmember)
		(predicate <http://www.w3.org/2007/rif#super>)
		(object ?rifsuper))
		(TripleTemplate
		(subject ?rifmember)
		(predicate <http://www.w3.org/2007/rif#sub>)
		(object ?rifsub))
		(TripleTemplate
		(subject ?rifsuper)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintsuper))
		(TripleTemplate
		(subject ?rifsub)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintsub))
	(not(exists 	(TripleTemplate
		(subject ?rifmember)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?x))))
		=>
(bind ?pattern (<http://white.gobo/new-blanknode>))(bind ?slotsub (<http://white.gobo/new-blanknode>))(bind ?slotsuper (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifmember)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?pattern)))
	(assert 	(Member
		(instance ?pattern)
		(class <http://clips.script/TemplatePatternCE>)))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Subclass")))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsuper ?slotsub ))))
	(assert 	(TripleTemplate
		(subject ?slotsuper)
		(predicate <http://clips.script/slot-name>)
		(object "super")))
	(assert 	(TripleTemplate
		(subject ?slotsuper)
		(predicate <http://clips.script/constraint>)
		(object ?constraintsuper)))
	(assert 	(TripleTemplate
		(subject ?slotsub)
		(predicate <http://clips.script/slot-name>)
		(object "sub")))
	(assert 	(TripleTemplate
		(subject ?slotsub)
		(predicate <http://clips.script/constraint>)
		(object ?constraintsub)))

)
;autogenerated group rules

(defrule rule-gen13178 
	(TripleTemplate
		(subject ?group)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?sentences))
	(or 	(Member
		(instance ?rifrule)
		(class <http://www.w3.org/2007/rif#Implies>))
		(Member
		(instance ?rifrule)
		(class <http://www.w3.org/2007/rif#Forall>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?sentences ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?sentences ?rifrule ))
		=>
	(assert 	(Member
		(instance ?rifrule)
		(class <http://white.gobo/modelA#RuleGenerator>)))

)

(defrule rule-gen13186 
	(TripleTemplate
		(subject ?group)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?sentences))
	(or 	(Member
		(instance ?rifclause)
		(class <http://www.w3.org/2007/rif#Equal>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?sentences ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?sentences ?rifclause ))
		=>
	(assert 	(Member
		(instance ?rifclause)
		(class <http://example.com/equal-not-implemented-as-clause>)))
(<http://white.gobo/set-graph-in-errorstate> "modelA%20cant%20process%20rif%3AEqual%20as%20clause%28ex%3Aequal-not-implemented-as-clause%29" )
)

(defrule rule-gen13192 
	(TripleTemplate
		(subject ?group)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?sentences))
	(or 	(Member
		(instance ?rifclause)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?rifclause)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?rifclause)
		(class <http://www.w3.org/2007/rif#Member>))
		(Member
		(instance ?rifclause)
		(class <http://www.w3.org/2007/rif#Subclass>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?sentences ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?sentences ?rifclause ))
		=>
	(assert 	(Member
		(instance ?rifclause)
		(class <http://white.gobo/modelA#RHSPatternGenerator>)))

)

(defrule rule-gen13204 
	(Member
		(instance ?rifframe)
		(class <http://white.gobo/modelA#RHSPatternGenerator>))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(Member
		(instance ?slot)
		(class <http://www.w3.org/2007/rif#Slot>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
	(assert 	(Member
		(instance ?slot)
		(class <http://white.gobo/modelA#RHSPatternGenerator>)))

)

(defrule rule-gen13212 
	(Member
		(instance ?patterngen)
		(class <http://white.gobo/modelA#RHSPatternGenerator>))
		(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
	(or 	(Member
		(instance ?term)
		(class <http://www.w3.org/2007/rif#List>))
		(Member
		(instance ?term)
		(class <http://www.w3.org/2007/rif#External>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?arglist ?term ))
		=>
	(assert 	(Member
		(instance ?term)
		(class <http://example.com/ExpressionGenerator>)))

)

(defrule rule-gen13222 
	(Member
		(instance ?riflist)
		(class <http://example.com/ExpressionGenerator>))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?arglist))
	(or 	(Member
		(instance ?term)
		(class <http://www.w3.org/2007/rif#List>))
		(Member
		(instance ?term)
		(class <http://www.w3.org/2007/rif#External>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?arglist ?term ))
		=>
	(assert 	(Member
		(instance ?term)
		(class <http://example.com/ExpressionGenerator>)))

)

(defrule rule-gen13232 
	(Member
		(instance ?patterngen)
		(class <http://white.gobo/modelA#RHSPatternGenerator>))
	(or 	(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?term))
		(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?term))
		(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?term))
		(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?term))
		(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?term))
		(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?term))
		(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#class>)
		(object ?term))
		(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#instance>)
		(object ?term))
		(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#sub>)
		(object ?term))
		(TripleTemplate
		(subject ?patterngen)
		(predicate <http://www.w3.org/2007/rif#super>)
		(object ?term))
	)
		=>
	(assert 	(Member
		(instance ?term)
		(class <http://example.com/ExpressionGenerator>)))

)

(defrule rule-gen13265 
(or 	(TripleTemplate
		(subject ?rifimply)
		(predicate <http://www.w3.org/2007/rif#if>)
		(object ?formula))
		(TripleTemplate
		(subject ?rifimply)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?formula))
	)
		=>
	(assert 	(Member
		(instance ?formula)
		(class <http://white.gobo/modelA#ConditionGenerator>)))

)

(defrule rule-gen13272 
	(Member
		(instance ?formula)
		(class <http://white.gobo/modelA#ConditionGenerator>))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://example.com/inherits-data>)
		(object ?child))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?formulalist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?formulalist ?child ))
		=>
	(assert 	(Member
		(instance ?child)
		(class <http://white.gobo/modelA#ConditionGenerator>)))

)

(defrule rule-gen13281 
	(Member
		(instance ?formula)
		(class <http://white.gobo/modelA#ConditionGenerator>))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?child))
		=>
	(assert 	(Member
		(instance ?child)
		(class <http://white.gobo/modelA#ConditionGenerator>)))

)

(defrule rule-gen13287 
	(Member
		(instance ?rifformula)
		(class <http://white.gobo/modelA#ConditionGenerator>))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(Member
		(instance ?slot)
		(class <http://www.w3.org/2007/rif#Slot>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
	(assert 	(Member
		(instance ?slot)
		(class <http://white.gobo/modelA#ConditionGenerator>)))

)

(defrule rule-gen13295 
	(Member
		(instance ?rifformula)
		(class <http://white.gobo/modelA#PatternGenerator>))
	(or 	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?child))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?child))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?child))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?child))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#instance>)
		(object ?child))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#class>)
		(object ?child))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#sub>)
		(object ?child))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#super>)
		(object ?child))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?child))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?child))
	)
		=>
	(assert 	(Member
		(instance ?child)
		(class <http://white.gobo/modelA#ConstraintGenerator>)))
	(assert 	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://white.gobo/modelA#pattern-uses-constraint>)
		(object ?child)))

)

(defrule rule-gen13328 
(or 	(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Frame>))
	)
		(Member
		(instance ?rifformula)
		(class <http://white.gobo/modelA#ConditionGenerator>))
		=>
	(assert 	(Member
		(instance ?rifformula)
		(class <http://white.gobo/modelA#PatternGenerator>)))

)

(defrule rule-gen13335 
	(Member
		(instance ?rifformula)
		(class <http://white.gobo/modelA#PatternGenerator>))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
	(or 	(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Variable>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#List>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?arglist ?child ))
		=>
	(assert 	(Member
		(instance ?child)
		(class <http://white.gobo/modelA#ConstraintGenerator>)))
	(assert 	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://white.gobo/modelA#pattern-uses-constraint>)
		(object ?child)))

)

(defrule rule-gen13347 
	(Member
		(instance ?rifformula)
		(class <http://white.gobo/modelA#PatternGenerator>))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://white.gobo/modelA#pattern-uses-constraint>)
		(object ?superlist))
		(TripleTemplate
		(subject ?superlist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
	(or 	(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Variable>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#List>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?itemlist ?child ))
		=>
	(assert 	(Member
		(instance ?child)
		(class <http://white.gobo/modelA#ConstraintGenerator>)))
	(assert 	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://white.gobo/modelA#pattern-uses-constraint>)
		(object ?child)))

)

(defrule rule-gen13362 
	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://white.gobo/modelA#pattern-uses-constraint>)
		(object ?child))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#List>))
		=>
	(assert 	(Member
		(instance ?rifformula)
		(class <http://white.gobo/modelA#MultiPatternGenerator>)))

)

(defrule rule-gen13368 
	(TripleTemplate
		(subject ?rifimply)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?action))	=>
	(assert 	(Member
		(instance ?action)
		(class <http://white.gobo/modelA#ActionGenerator>)))

)

(defrule rule-gen13372 
(or 	(Member
		(instance ?action)
		(class <http://www.w3.org/2007/rif#Assert>))
		(Member
		(instance ?action)
		(class <http://www.w3.org/2007/rif#Retract>))
		(Member
		(instance ?action)
		(class <http://www.w3.org/2007/rif#Modify>))
		(Member
		(instance ?action)
		(class <http://www.w3.org/2007/rif#Execute>))
	)	=>
	(assert 	(Member
		(instance ?action)
		(class <http://white.gobo/modelA#ActionGenerator>)))

)

(defrule rule-gen13381 
	(Member
		(instance ?rifforall)
		(class <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?action))
	(not	(Member
		(instance ?action)
		(class <http://www.w3.org/2007/rif#Implies>)))
	(not	(Member
		(instance ?action)
		(class <http://www.w3.org/2007/rif#Forall>)))
		=>
	(assert 	(Member
		(instance ?action)
		(class <http://white.gobo/modelA#ActionGenerator>)))

)

(defrule rule-gen13391 
	(Member
		(instance ?rifexternal)
		(class <http://www.w3.org/2007/rif#External>))
		(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?rifatom))
		(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://example.com/inherits-data>)
		(object ?child))
	(not	(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Var>)))
		=>
	(assert 	(Member
		(instance ?child)
		(class <http://example.com/ExpressionGenerator>)))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen13402 (declare (salience -100))
	(TripleTemplate
		(subject ?rif)
		(predicate _:qqadd-pattern-from)
		(object ?pattern))
	(not 	(TripleTemplate
		(subject ?rif)
		(predicate _:qqadded-pattern-from)
		(object ?pattern)))
		=>
	(assert 	(Member
		(instance ?pattern)
		(class <http://example.com/misses-bound-variables>)))
	(assert 	(TripleTemplate
		(subject ?rif)
		(predicate <http://example.com/misses-pattern-for>)
		(object ?pattern)))
(<http://white.gobo/set-graph-in-errorstate> "Dont%20know%20where%20to%20add%20pattern%20for%20a%20formula%28ex%3Amisses-bound-variables%29" )
)

(defrule rule-gen13406 (declare (salience -100))
	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-greater-than> (<http://www.w3.org/2007/rif-builtin-function#count> ?formulalist ) "0^^http://www.w3.org/2001/XMLSchema#integer" ))
		=>
	(assert 	(Member
		(instance (<http://www.w3.org/2007/rif-builtin-function#get> ?formulalist "0^^http://www.w3.org/2001/XMLSchema#integer" ))
		(class <http://example.com/couldnt-translate-to-pattern>)))
(<http://white.gobo/set-graph-in-errorstate> "Couldnt%20translate%20formula%20to%20pattern.%28ex%3Acouldnt-translate-to-pattern%29" )
)

(defrule rule-gen13410 
(or 	(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#And>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Or>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Exists>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#INeg>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Member>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#SubClass>))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Equal>))
	)	=>
	(assert 	(Member
		(instance ?formula)
		(class _:qqrifformula)))

)

(defrule rule-gen13431 
	(Member
		(instance ?rifvar)
		(class <http://www.w3.org/2007/rif#Var>))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsconstraint))
		=>
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint)))

)

(defrule rule-gen13437 
	(Member
		(instance ?riflist)
		(class <http://example.com/ConstraintGenerator>))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?itemlist ?rifvar ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint)))

)

(defrule rule-gen13446 
	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?rifformula))
	(or 	(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Equal>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Member>))
	)
		(TripleTemplate
		(subject ?rifformula)
		(predicate _:qqbound-variable)
		(object ?clipsconstraint))
		=>
	(assert 	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://white.gobo/modelA#bound-variable>)
		(object ?clipsconstraint)))

)

(defrule rule-gen13463 
	(Member
		(instance ?rifrule)
		(class <http://www.w3.org/2007/rif#And>))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?formulalist))
	(or 	(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Equal>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Member>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?formulalist ?rifformula ))
		(TripleTemplate
		(subject ?rifformula)
		(predicate _:qqbound-variable)
		(object ?clipsconstraint))
		=>
	(assert 	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://white.gobo/modelA#bound-variable>)
		(object ?clipsconstraint)))

)

(defrule rule-gen13482 
(or 	(Member
		(instance ?rifobj)
		(class <http://white.gobo/modelA#TripleTemplateGenerator>))
		(Member
		(instance ?rifobj)
		(class <http://white.gobo/modelA#MemberPatternGenerator>))
		(Member
		(instance ?rifobj)
		(class <http://white.gobo/modelA#SubclassPatternGenerator>))
	)
	(or 	(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#sub>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#super>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#class>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#instance>)
		(object ?rifvar))
	)
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint))
	(not 	(TripleTemplate
		(subject ?rifobj)
		(predicate _:qqbound-variable)
		(object ?clipsconstraint)))
		=>
	(assert 	(TripleTemplate
		(subject ?rifobj)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsconstraint)))

)

(defrule rule-gen13513 
	(Member
		(instance ?rifobj)
		(class <http://white.gobo/modelA#AtomPatternGenerator>))
		(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint))
	(not 	(TripleTemplate
		(subject ?rifobj)
		(predicate _:qqbound-variable)
		(object ?clipsconstraint)))
		=>
	(assert 	(TripleTemplate
		(subject ?rifobj)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsconstraint)))

)

(defrule rule-gen13522 
	(Member
		(instance ?rifformula)
		(class <http://white.gobo/modelA#PatternGenerator>))
	(or 	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#instance>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#class>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#sub>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#super>)
		(object ?rifvar))
	)
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint))
	(not 	(TripleTemplate
		(subject ?rifformula)
		(predicate _:qqbound-variable)
		(object ?clipsconstraint)))
		=>
	(assert 	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsconstraint)))

)

(defrule rule-gen13549 
	(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?rifvar))
		(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ConstraintGenerator>))
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint))
		=>
	(assert 	(TripleTemplate
		(subject ?riflist)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint)))

)

(defrule rule-gen13558 
	(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
		(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ConstraintGenerator>))
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?itemlist ?rifvar ))
		=>
	(assert 	(TripleTemplate
		(subject ?riflist)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint)))

)

(defrule rule-gen13567 
(or 	(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#instance>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#class>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#sub>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#super>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?rifvar))
	)
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-needs-var)
		(object ?clipsvar))
		=>
	(assert 	(TripleTemplate
		(subject ?rifformula)
		(predicate _:qqconstraints-needs-variable)
		(object ?clipsvar)))

)

(defrule rule-gen13604 
	(Member
		(instance ?rifexternal)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?rifexternal)
		(class <http://white.gobo/modelA#PatternGenerator>))
		(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?rifatom))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
		(Member
		(instance ?arg)
		(class <http://www.w3.org/2007/rif#Var>))
		(TripleTemplate
		(subject ?arg)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?arglist ?arg ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifexternal)
		(predicate _:qqconstraints-needs-variable)
		(object ?clipsvar)))

)

(defrule rule-gen13620 
	(Member
		(instance ?rifexternal)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?rifexternal)
		(class <http://white.gobo/modelA#PatternGenerator>))
		(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?rifatom))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
	(or 	(Member
		(instance ?arg)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?arg)
		(class <http://www.w3.org/2007/rif#List>))
	)
		(TripleTemplate
		(subject ?arg)
		(predicate _:qqexpression-needs-var)
		(object ?clipsvar))
		=>
	(assert 	(TripleTemplate
		(subject ?rifexternal)
		(predicate _:qqconstraints-needs-variable)
		(object ?clipsvar)))

)

(defrule rule-gen13638 
	(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?rifatom))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqexpression-needs-var)
		(object ?clipsvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?arglist ?rifvar ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifexternal)
		(predicate _:qqexpressions-needs-var)
		(object ?clipsvar)))

)

(defrule rule-gen13648 
	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-needs-var)
		(object ?clipsvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?arglist ?rifvar ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate _:qqconstraints-needs-variable)
		(object ?clipsvar)))

)

(defrule rule-gen13655 
	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(Member
		(instance ?rifframe)
		(class <http://white.gobo/modelA#PatternGenerator>))
		(Member
		(instance ?slot)
		(class <http://www.w3.org/2007/rif#Slot>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
	(or 	(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?rifvar))
	)
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint))
	(not 	(TripleTemplate
		(subject ?rifframe)
		(predicate _:qqbound-variable)
		(object ?clipsconstraint)))
		=>
	(assert 	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsconstraint)))

)

(defrule rule-gen13672 
	(Member
		(instance ?rifatom)
		(class <http://white.gobo/modelA#PatternGenerator>))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqconstraint-binds-var)
		(object ?clipsconstraint))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?arglist ?rifvar ))
	(not 	(TripleTemplate
		(subject ?rifatom)
		(predicate _:qqbound-variable)
		(object ?clipsconstraint)))
		=>
	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsconstraint)))

)

(defrule rule-gen13681 
	(Member
		(instance ?rifor)
		(class <http://www.w3.org/2007/rif#Or>))
		(TripleTemplate
		(subject ?rifor)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?formulalist))
		(TripleTemplate
		(subject ?firstsubformula)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsconstraint))
	(test (eq ?firstsubformula(<http://www.w3.org/2007/rif-builtin-function#get> ?formulalist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
	(not(exists (and 	(Member
		(instance ?otherformula)
		(class _:qqrifformula))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?formulalist ?otherformula ))
	(not 	(TripleTemplate
		(subject ?otherformula)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsconstraint)))
	)))
		=>
	(assert 	(TripleTemplate
		(subject ?rifor)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsconstraint)))

)

(defrule rule-gen13692 
	(Member
		(instance ?rifand)
		(class <http://www.w3.org/2007/rif#And>))
		(TripleTemplate
		(subject ?rifand)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?formulalist))
		(TripleTemplate
		(subject ?subformula)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsconstraint))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?formulalist ?subformula ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifand)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsconstraint)))

)

(defrule rule-gen13701 
	(Member
		(instance ?x)
		(class <http://white.gobo/modelA#ConditionGenerator>))	=>
	(assert 	(Atom
		(op _:qqcheck-binding)
		(args ?x )))

)

(defrule rule-gen13704 
	(Member
		(instance ?parent)
		(class <http://white.gobo/modelA#ConditionGenerator>))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(or 	(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?x))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?x))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
	(assert 	(Atom
		(op _:qqcheck-binding)
		(args ?x )))

)

(defrule rule-gen13716 
	(Member
		(instance ?parent)
		(class <http://white.gobo/modelA#ConditionGenerator>))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?atom))
		(TripleTemplate
		(subject ?atom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
	(or 	(Member
		(instance ?x)
		(class <http://www.w3.org/2007/rif#Var>))
		(Member
		(instance ?x)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?x)
		(class <http://www.w3.org/2007/rif#List>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?arglist ?x ))
		=>
	(assert 	(Atom
		(op _:qqcheck-binding)
		(args ?x )))

)

(defrule rule-gen13731 
	(Member
		(instance ?parent)
		(class <http://white.gobo/modelA#ConditionGenerator>))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
	(or 	(Member
		(instance ?x)
		(class <http://www.w3.org/2007/rif#Var>))
		(Member
		(instance ?x)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?x)
		(class <http://www.w3.org/2007/rif#List>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?arglist ?x ))
		=>
	(assert 	(Atom
		(op _:qqcheck-binding)
		(args ?x )))

)

(defrule rule-gen13743 
	(Member
		(instance ?parent)
		(class <http://white.gobo/modelA#ConditionGenerator>))
	(or 	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?term))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#subject>)
		(object ?term))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?term))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?term))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#sub>)
		(object ?term))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#super>)
		(object ?term))
	)
		=>
	(assert 	(Atom
		(op _:qqcheck-binding)
		(args ?term )))

)

(defrule rule-gen13764 
	(Atom
		(op _:qqcheck-binding)
		(args ?rifvar ))
		(Member
		(instance ?rifvar)
		(class <http://www.w3.org/2007/rif#Var>))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsexpression))
		=>
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqexpression-needs-var)
		(object ?clipsexpression)))

)

(defrule rule-gen13772 
	(Atom
		(op _:qqcheck-binding)
		(args ?rifterm ))
		(TripleTemplate
		(subject ?rifterm)
		(predicate <http://example.com/inherits-data>)
		(object ?rifvar))
	(not	(Member
		(instance ?rifterm)
		(class <http://www.w3.org/2007/rif#List>)))
		(Member
		(instance ?rifvar)
		(class <http://www.w3.org/2007/rif#Var>))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsexpression))
		=>
	(assert 	(TripleTemplate
		(subject ?rifterm)
		(predicate _:qqconstraint-needs-var)
		(object ?clipsexpression)))
	(assert 	(TripleTemplate
		(subject ?rifterm)
		(predicate _:qqexpression-needs-var)
		(object ?clipsexpression)))

)

(defrule rule-gen13785 
	(Atom
		(op _:qqcheck-binding)
		(args ?rifterm ))
		(TripleTemplate
		(subject ?rifterm)
		(predicate <http://example.com/inherits-data>)
		(object ?rifvar))
		(Member
		(instance ?rifterm)
		(class <http://www.w3.org/2007/rif#List>))
		(TripleTemplate
		(subject ?rifterm)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
		(Member
		(instance ?rifvar)
		(class <http://www.w3.org/2007/rif#Var>))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsexpression))
	(not(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?itemlist ?rifvar )))
		=>
	(assert 	(TripleTemplate
		(subject ?rifterm)
		(predicate _:qqexpression-needs-var)
		(object ?clipsexpression)))

)

(defrule rule-gen13801 
	(Member
		(instance ?riflist)
		(class <http://example.com/ExpressionGenerator>))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
		(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqexpression-needs-var)
		(object ?clipsexpression))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?itemlist ?rifvar ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate _:qqexpression-needs-var)
		(object ?clipsexpression)))

)

(defrule rule-gen13810 
	(TripleTemplate
		(subject ?group)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?sentences))
	(or 	(Member
		(instance ?rifrule)
		(class <http://www.w3.org/2007/rif#Implies>))
		(Member
		(instance ?rifrule)
		(class <http://www.w3.org/2007/rif#Forall>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?sentences ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?sentences ?rifrule ))
		=>
(bind ?defrule (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?rifrule)
		(class _:qqpatterncontainer)))
	(assert 	(TripleTemplate
		(subject ?rifrule)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))
	(assert 	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://white.gobo/modelA#as-defrule>)
		(object ?defrule)))
	(assert 	(Member
		(instance ?defrule)
		(class <http://clips.script/Defrule>)))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))

)

(defrule rule-gen13818 
	(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Or>))
		=>
(bind ?clipsor (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?formula)
		(class _:qqpatterncontainer)))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?clipsor)))
	(assert 	(Member
		(instance ?clipsor)
		(class <http://clips.script/OrCE>)))
	(assert 	(TripleTemplate
		(subject ?clipsor)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))

)

(defrule rule-gen13821 
	(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#INeg>))
		=>
(bind ?clipsnot (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?formula)
		(class _:qqpatterncontainer)))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?clipsnot)))
	(assert 	(Member
		(instance ?clipsnot)
		(class <http://clips.script/NotCE>)))
	(assert 	(TripleTemplate
		(subject ?clipsnot)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))

)

(defrule rule-gen13824 
	(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Exists>))
		=>
(bind ?clipsexists (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?formula)
		(class _:qqpatterncontainer)))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?clipsexists)))
	(assert 	(Member
		(instance ?clipsexists)
		(class <http://clips.script/ExistsCE>)))
	(assert 	(TripleTemplate
		(subject ?clipsexists)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))

)

(defrule rule-gen13827 
	(Member
		(instance ?rifand)
		(class <http://www.w3.org/2007/rif#And>))
	(not(exists (and 	(TripleTemplate
		(subject ?superand)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?formulalist))
		(Member
		(instance ?superand)
		(class <http://www.w3.org/2007/rif#And>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?formulalist ?rifand ))
	)))
	(not(exists 	(TripleTemplate
		(subject ?superimply)
		(predicate <http://www.w3.org/2007/rif#if>)
		(object ?rifand))))
	(not(exists 	(TripleTemplate
		(subject ?superrule)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?rifand))))
		=>
(bind ?clipsand (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?rifand)
		(class _:qqpatterncontainer)))
	(assert 	(TripleTemplate
		(subject ?rifand)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))
	(assert 	(TripleTemplate
		(subject ?rifand)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?clipsand)))
	(assert 	(Member
		(instance ?clipsand)
		(class <http://clips.script/AndCE>)))
	(assert 	(TripleTemplate
		(subject ?clipsand)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))

)

(defrule rule-gen13841 
(or 	(Member
		(instance ?formula)
		(class _:qqrifformula))
		(Member
		(instance ?formula)
		(class <http://www.w3.org/2007/rif#Member>))
	)
	(or 	(Member
		(instance ?rifand)
		(class <http://www.w3.org/2007/rif#And>))
		(Member
		(instance ?rifand)
		(class <http://www.w3.org/2007/rif#Or>))
	)
		(TripleTemplate
		(subject ?rifand)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?formulalist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?formulalist ?formula ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifand)
		(predicate _:qqadd-pattern-from)
		(object ?formula)))

)

(defrule rule-gen13853 
(or 	(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#if>)
		(object ?formula))
		(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?formula))
		(TripleTemplate
		(subject ?rifobj)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?formula))
	)	=>
	(assert 	(TripleTemplate
		(subject ?rifobj)
		(predicate _:qqadd-pattern-from)
		(object ?formula)))

)

(defrule rule-gen13863 
	(TripleTemplate
		(subject ?rifand)
		(predicate _:qqadd-pattern-from)
		(object ?otherrifand))
	(or 	(Member
		(instance ?rifand)
		(class <http://www.w3.org/2007/rif#And>))
		(Member
		(instance ?rifand)
		(class <http://www.w3.org/2007/rif#Not>))
	)
		(Member
		(instance ?otherrifand)
		(class <http://www.w3.org/2007/rif#And>))
		(TripleTemplate
		(subject ?otherrifand)
		(predicate _:qqadd-pattern-from)
		(object ?rifformula))
		=>
	(assert 	(TripleTemplate
		(subject ?otherrifand)
		(predicate _:qqadded-pattern-from)
		(object ?rifformula)))
	(assert 	(TripleTemplate
		(subject ?rifand)
		(predicate _:qqadded-pattern-from)
		(object ?otherrifand)))
	(assert 	(TripleTemplate
		(subject ?rifand)
		(predicate _:qqadd-pattern-from)
		(object ?rifformula)))

)

(defrule rule-gen13876 
	(TripleTemplate
		(subject ?rifforall)
		(predicate _:qqadd-pattern-from)
		(object ?rifrule))
	(or 	(Member
		(instance ?rifforall)
		(class <http://www.w3.org/2007/rif#Forall>))
		(Member
		(instance ?rifforall)
		(class <http://www.w3.org/2007/rif#Implies>))
	)
	(or 	(Member
		(instance ?rifrule)
		(class <http://www.w3.org/2007/rif#Forall>))
		(Member
		(instance ?rifrule)
		(class <http://www.w3.org/2007/rif#Implies>))
		(Member
		(instance ?rifrule)
		(class <http://www.w3.org/2007/rif#And>))
	)
		(TripleTemplate
		(subject ?rifrule)
		(predicate _:qqadd-pattern-from)
		(object ?rifformula))
		=>
	(assert 	(TripleTemplate
		(subject ?rifrule)
		(predicate _:qqadded-pattern-from)
		(object ?rifformula)))
	(assert 	(TripleTemplate
		(subject ?rifforall)
		(predicate _:qqadded-pattern-from)
		(object ?rifrule)))
	(assert 	(TripleTemplate
		(subject ?rifforall)
		(predicate _:qqadd-pattern-from)
		(object ?rifformula)))

)

(defrule rule-gen13893 
	(Member
		(instance ?pattern)
		(class <http://white.gobo/modelA#PatternGenerator>))
		(TripleTemplate
		(subject ?pattern)
		(predicate <http://example.com/inherits-data>)
		(object ?term))
		(Member
		(instance ?term)
		(class <http://white.gobo/modelA#ConstraintGenerator>))
		(Member
		(instance ?term)
		(class <http://www.w3.org/2007/rif#Var>))
		(TripleTemplate
		(subject ?term)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsvar))
		=>
	(assert 	(TripleTemplate
		(subject ?term)
		(predicate _:qqexpression-needs-var)
		(object ?clipsvar)))

)

(defrule rule-gen13906 
	(Member
		(instance ?formulacontainer)
		(class _:qqpatterncontainer))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate <http://example.com/inherits-data>)
		(object ?formula))
		(Member
		(instance ?expression)
		(class <http://example.com/ExpressionGenerator>))
		(TripleTemplate
		(subject ?expression)
		(predicate <http://example.com/inherits-data>)
		(object ?rifvar))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar))
		(Member
		(instance ?clipsvar)
		(class <http://clips.script/Variable>))
	(not	(Member
		(instance ?clipsvar)
		(class <http://example.com/ConstraintGenerator>)))
		=>
	(assert 	(TripleTemplate
		(subject ?expression)
		(predicate _:qqexpression-needs-var)
		(object ?clipsvar)))

)
;autogenerated group rules

(defrule rule-gen13924 (declare (salience -1))
(or 	(Member
		(instance ?superpattern)
		(class <http://clips.script/AndCE>))
		(Member
		(instance ?superpattern)
		(class <http://clips.script/OrCE>))
		(Member
		(instance ?superpattern)
		(class <http://clips.script/NotCE>))
		(Member
		(instance ?superpattern)
		(class <http://clips.script/ExistsCE>))
		(Member
		(instance ?superpattern)
		(class <http://clips.script/Defrule>))
	)
	(or 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate <http://white.gobo/modelA#as-defrule>)
		(object ?superpattern))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?superpattern))
	)
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?subpattern))
	(test (eq ?formula(<http://www.w3.org/2007/rif-builtin-function#get> ?formulalist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		(TripleTemplate
		(subject ?superpattern)
		(predicate <http://clips.script/conditional-element>)
		(object ?patternlist))
	(not 	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#lhs-pattern-after-conditions>)
		(object ?aftercondition)))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?formulacontainer)
			(eq ?fct:predicate _:qqformulalist))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?formulalist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?superpattern)
			(eq ?fct:predicate <http://clips.script/conditional-element>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?superpattern)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?patternlist ?subpattern ))))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate _:qqtransfer-variable-binding)
		(object ?formulacontainer)))

)

(defrule rule-gen13950 (declare (salience -1))
(or 	(Member
		(instance ?superpattern)
		(class <http://clips.script/AndCE>))
		(Member
		(instance ?superpattern)
		(class <http://clips.script/OrCE>))
		(Member
		(instance ?superpattern)
		(class <http://clips.script/NotCE>))
		(Member
		(instance ?superpattern)
		(class <http://clips.script/ExistsCE>))
		(Member
		(instance ?superpattern)
		(class <http://clips.script/Defrule>))
	)
	(or 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate <http://white.gobo/modelA#as-defrule>)
		(object ?superpattern))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?superpattern))
	)
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?subpattern))
	(test (eq ?formula(<http://www.w3.org/2007/rif-builtin-function#get> ?formulalist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		(TripleTemplate
		(subject ?superpattern)
		(predicate <http://clips.script/conditional-element>)
		(object ?patternlist))
	(exists 	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#lhs-pattern-after-conditions>)
		(object ?x)))
		=>
(bind ?andpattern (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?andpattern)
		(class <http://clips.script/AndCE>)))
	(assert 	(TripleTemplate
		(subject ?andpattern)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?subpattern))))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate _:qqtransfer-after-conditions)
		(object ?andpattern)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?formulacontainer)
			(eq ?fct:predicate _:qqformulalist))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?formulalist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?superpattern)
			(eq ?fct:predicate <http://clips.script/conditional-element>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?superpattern)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?patternlist ?andpattern ))))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate _:qqtransfer-variable-binding)
		(object ?formulacontainer)))

)

(defrule rule-gen13979 (declare (salience -1))
	(TripleTemplate
		(subject ?formula)
		(predicate _:qqtransfer-after-conditions)
		(object ?andpattern))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#lhs-pattern-after-conditions>)
		(object ?aftercondition))
	(not 	(TripleTemplate
		(subject ?aftercondition)
		(predicate _:qqtransferred-after-condition)
		(object ?andpattern)))
		(TripleTemplate
		(subject ?andpattern)
		(predicate <http://clips.script/conditional-element>)
		(object ?conditions))
		=>
	(assert 	(TripleTemplate
		(subject ?aftercondition)
		(predicate _:qqtransferred-after-condition)
		(object ?andpattern)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?andpattern)
			(eq ?fct:predicate <http://clips.script/conditional-element>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?andpattern)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?conditions ?aftercondition ))))

)

(defrule rule-gen13989 
(or 	(Member
		(instance ?rifframe)
		(class <http://white.gobo/modelA#TripleTemplateGenerator>))
		(Member
		(instance ?rifframe)
		(class <http://white.gobo/modelA#MemberPatternGenerator>))
		(Member
		(instance ?rifframe)
		(class <http://white.gobo/modelA#SubclassPatternGenerator>))
	)
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsvar))
		=>
	(assert 	(Member
		(instance ?clipsvar)
		(class <http://example.com/Variable>)))

)

(defrule rule-gen13999 
	(TripleTemplate
		(subject ?formula)
		(predicate _:qqtransfer-variable-binding)
		(object ?formulacontainer))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsvar))
		=>
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqbound-variable)
		(object ?clipsvar)))

)

(defrule rule-gen14006 
(or 	(Member
		(instance ?formulacontainer)
		(class <http://www.w3.org/2007/rif#And>))
		(Member
		(instance ?formulacontainer)
		(class <http://www.w3.org/2007/rif#Forall>))
		(Member
		(instance ?formulacontainer)
		(class <http://www.w3.org/2007/rif#Implies>))
	)
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqbound-variable)
		(object ?clipsvar))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadd-pattern-from)
		(object ?formula))
	(not 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?formula)))
		=>
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate _:qqbound-variable)
		(object ?clipsvar)))

)

(defrule rule-gen14019 
	(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ListAsConstraint>))
		(TripleTemplate
		(subject ?riflist)
		(predicate _:qqexpression-needs-var)
		(object ?unboundvar))
	(not 	(TripleTemplate
		(subject ?riflist)
		(predicate _:qqbound-variable)
		(object ?unboundvar)))
		=>
	(assert 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?unboundvar)))

)
;autogenerated group rules

(defrule rule-gen14025 (declare (salience -10))
	(Member
		(instance ?riflist)
		(class <http://www.w3.org/2007/rif#List>))
		(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ConstraintGenerator>))
	(not	(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ListAsConstraint>)))
	(not(exists 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?rest))))
	(not(exists (and 	(TripleTemplate
		(subject ?riflist)
		(predicate _:qqexpression-needs-var)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?riflist)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
		=>
	(assert 	(Member
		(instance ?riflist)
		(class <http://example.com/ExpressionGenerator>)))

)

(defrule rule-gen14038 (declare (salience -10))
	(Member
		(instance ?riflist)
		(class <http://www.w3.org/2007/rif#List>))
		(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ConstraintGenerator>))
	(not	(Member
		(instance ?riflist)
		(class <http://example.com/ExpressionGenerator>)))
		(TripleTemplate
		(subject ?riflist)
		(predicate _:qqexpression-needs-var)
		(object ?unboundvar))
	(not 	(TripleTemplate
		(subject ?riflist)
		(predicate _:qqbound-variable)
		(object ?unboundvar)))
		=>
	(assert 	(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ListAsConstraint>)))

)

(defrule rule-gen14048 (declare (salience -10))
	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadd-pattern-from)
		(object ?rifframe))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?frameobject))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?slotvalue))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
	(not 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?slot)))
	(not(exists (and 	(TripleTemplate
		(subject ?slot)
		(predicate _:qqconstraints-needs-variable)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?slot)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
	(not(exists (and 	(TripleTemplate
		(subject ?frameobject)
		(predicate _:qqconstraint-needs-variable)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?slot)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		=>
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?slot)))
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifframe)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?formulacontainer)
			(eq ?fct:predicate _:qqformulalist))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?formulalist ?slot ))))
	(assert 	(Member
		(instance ?slot)
		(class <http://white.gobo/modelA#TripleTemplateGenerator>)))
	(assert 	(TripleTemplate
		(subject ?slot)
		(predicate _:qqtransfer-variable-binding)
		(object ?formulacontainer)))
	(assert 	(Member
		(instance ?rifframe)
		(class <http://white.gobo/modelA#TripleTemplateGenerator>)))
	(assert 	(TripleTemplate
		(subject ?rifframe)
		(predicate _:qqtransfer-variable-binding)
		(object ?formulacontainer)))

)

(defrule rule-gen14073 (declare (salience -10))
	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadd-pattern-from)
		(object ?rifmember))
		(Member
		(instance ?rifmember)
		(class <http://www.w3.org/2007/rif#Member>))
	(not(exists (and 	(TripleTemplate
		(subject ?rifmember)
		(predicate _:qqconstraints-needs-variable)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?rifmember)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
	(not 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifmember)))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		=>
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifmember)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?formulacontainer)
			(eq ?fct:predicate _:qqformulalist))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?formulalist ?rifmember ))))
	(assert 	(Member
		(instance ?rifmember)
		(class <http://white.gobo/modelA#MemberPatternGenerator>)))
	(assert 	(Member
		(instance ?rifmember)
		(class <http://white.gobo/modelA#PatternGenerator>)))

)

(defrule rule-gen14085 (declare (salience -10))
	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadd-pattern-from)
		(object ?rifmember))
		(Member
		(instance ?rifmember)
		(class <http://www.w3.org/2007/rif#Subclass>))
	(not(exists (and 	(TripleTemplate
		(subject ?rifmember)
		(predicate _:qqconstraints-needs-variable)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?rifmember)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
	(not 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifmember)))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		=>
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifmember)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?formulacontainer)
			(eq ?fct:predicate _:qqformulalist))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?formulalist ?rifmember ))))
	(assert 	(Member
		(instance ?rifmember)
		(class <http://white.gobo/modelA#SubclassPatternGenerator>)))
	(assert 	(Member
		(instance ?rifmember)
		(class <http://white.gobo/modelA#PatternGenerator>)))

)

(defrule rule-gen14097 (declare (salience -10))
	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadd-pattern-from)
		(object ?rifatom))
		(Member
		(instance ?rifatom)
		(class <http://www.w3.org/2007/rif#Atom>))
	(not 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifatom)))
	(not(exists (and 	(TripleTemplate
		(subject ?rifatom)
		(predicate _:qqconstraints-needs-variable)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?rifatom)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		=>
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifatom)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?formulacontainer)
			(eq ?fct:predicate _:qqformulalist))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?formulalist ?rifatom ))))
	(assert 	(Member
		(instance ?rifatom)
		(class <http://white.gobo/modelA#AtomPatternGenerator>)))
	(assert 	(Member
		(instance ?rifatom)
		(class <http://white.gobo/modelA#PatternGenerator>)))

)

(defrule rule-gen14109 (declare (salience -10))
	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadd-pattern-from)
		(object ?rifexternal))
		(Member
		(instance ?rifexternal)
		(class <http://www.w3.org/2007/rif#External>))
	(not 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifexternal)))
	(not(exists (and 	(TripleTemplate
		(subject ?rifexternal)
		(predicate _:qqexpressions-needs-var)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?rifexternal)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		=>
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifexternal)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?formulacontainer)
			(eq ?fct:predicate _:qqformulalist))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?formulalist ?rifexternal ))))
	(assert 	(Member
		(instance ?rifexternal)
		(class <http://white.gobo/modelA#TestPatternExternalGenerator>)))
	(assert 	(Member
		(instance ?rifexternal)
		(class <http://white.gobo/modelA#PatternGenerator>)))

)

(defrule rule-gen14121 (declare (salience -10))
	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadd-pattern-from)
		(object ?rifequal))
		(Member
		(instance ?rifequal)
		(class <http://www.w3.org/2007/rif#Equal>))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifleft))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?rifright))
	(not 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifequal)))
	(not(exists (and 	(TripleTemplate
		(subject ?rifleft)
		(predicate _:qqexpression-needs-var)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?rifequal)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
	(not(exists (and 	(TripleTemplate
		(subject ?rifright)
		(predicate _:qqexpression-needs-var)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?rifequal)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		=>
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifequal)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?formulacontainer)
			(eq ?fct:predicate _:qqformulalist))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?formulalist ?rifequal ))))
	(assert 	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#TestPatternEqualGenerator>)))
	(assert 	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#PatternGenerator>)))

)
;autogenerated group rules

(defrule rule-gen14142 (declare (salience -12))
	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadd-pattern-from)
		(object ?rifequal))
	(not 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifequal)))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate <http://white.gobo/modelA#as-defrule>)
		(object ?defrule))
		(Member
		(instance ?rifequal)
		(class <http://www.w3.org/2007/rif#Equal>))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifleft))
		(Member
		(instance ?rifleft)
		(class <http://www.w3.org/2007/rif#Var>))
		(TripleTemplate
		(subject ?rifleft)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsassign))
	(not 	(TripleTemplate
		(subject ?rifequal)
		(predicate _:qqbound-variable)
		(object ?clipsassign)))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?rifright))
	(not(exists (and 	(TripleTemplate
		(subject ?rifright)
		(predicate _:qqexpression-needs-var)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?rifequal)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		=>
	(assert 	(TripleTemplate
		(subject ?rifequal)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsassign)))
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifequal)))
	(assert 	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#TestPatternLeftAssignGenerator>)))
	(assert 	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#PatternGenerator>)))
	(assert 	(Member
		(instance ?rifright)
		(class <http://white.gobo/modelA#ExpressionGenerator>)))
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqbound-variable)
		(object ?clipsassign)))

)

(defrule rule-gen14168 (declare (salience -12))
	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadd-pattern-from)
		(object ?rifequal))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate <http://white.gobo/modelA#as-defrule>)
		(object ?defrule))
		(Member
		(instance ?rifequal)
		(class <http://www.w3.org/2007/rif#Equal>))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?rifright))
		(Member
		(instance ?rifright)
		(class <http://www.w3.org/2007/rif#Var>))
		(TripleTemplate
		(subject ?rifright)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsassign))
	(not 	(TripleTemplate
		(subject ?rifequal)
		(predicate _:qqbound-variable)
		(object ?clipsassign)))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifleft))
	(not 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifequal)))
	(not(exists (and 	(TripleTemplate
		(subject ?rifleft)
		(predicate _:qqexpression-needs-var)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?rifequal)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		=>
	(assert 	(TripleTemplate
		(subject ?rifequal)
		(predicate <http://white.gobo/modelA#binds-var>)
		(object ?clipsassign)))
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifequal)))
	(assert 	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#TestPatternRightAssignGenerator>)))
	(assert 	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#PatternGenerator>)))
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqbound-variable)
		(object ?clipsassign)))

)

(defrule rule-gen14194 (declare (salience -10))
	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadd-pattern-from)
		(object ?rifexternal))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate <http://white.gobo/modelA#as-defrule>)
		(object ?defrule))
	(not 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifexternal)))
		(TripleTemplate
		(subject ?rifconstiristring)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object "http%3A%2F%2Fwww.w3.org%2F2007%2Frif-builtin-predicate%23iri-string^^http://www.w3.org/2001/XMLSchema#anyURI"))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifconstiristring))
		(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?rifatom))
		(Member
		(instance ?rifexternal)
		(class <http://www.w3.org/2007/rif#External>))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?arglist ))
		(Member
		(instance ?targetiri)
		(class <http://www.w3.org/2007/rif#Var>))
	(not 	(TripleTemplate
		(subject ?rifexternal)
		(predicate _:qqbound-variable)
		(object ?clipsassign)))
	(test (eq ?targetiri(<http://www.w3.org/2007/rif-builtin-function#get> ?arglist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		(TripleTemplate
		(subject ?targetstring)
		(predicate <http://example.com/as-expression>)
		(object ?clipsassign))
	(test (eq ?targetstring(<http://www.w3.org/2007/rif-builtin-function#get> ?arglist "1^^http://www.w3.org/2001/XMLSchema#integer" )))
	(not(exists (and 	(TripleTemplate
		(subject ?targetstring)
		(predicate _:qqexpression-needs-var)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?rifexternal)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
		(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqformulalist)
		(object ?formulalist))
		=>
	(assert 	(Member
		(instance ?rifexternal)
		(class <http://white.gobo/modelA#AssignGenerator>)))
	(assert 	(TripleTemplate
		(subject ?targetiri)
		(predicate _:qquse-expression-from)
		(object ?targetstring)))
	(assert 	(Member
		(instance ?targetstring)
		(class <http://white.gobo/modelA#ExpressionGenerator>)))
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqadded-pattern-from)
		(object ?rifexternal)))
	(assert 	(TripleTemplate
		(subject ?formulacontainer)
		(predicate _:qqbound-variable)
		(object ?targetstring)))

)

(defrule rule-gen14226 (declare (salience -10))
	(TripleTemplate
		(subject ?superpattern)
		(predicate _:qqadd-pattern-from)
		(object ?subpattern))
		(Member
		(instance ?subpattern)
		(class _:qqpatterncontainer))
	(not 	(TripleTemplate
		(subject ?superpattern)
		(predicate _:qqadded-pattern-from)
		(object ?subpattern)))
	(not(exists (and 	(TripleTemplate
		(subject ?subpattern)
		(predicate _:qqconstraints-needs-variable)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?subpattern)
		(predicate _:qqbound-variable)
		(object ?x)))
	)))
		(TripleTemplate
		(subject ?superpattern)
		(predicate _:qqformulalist)
		(object ?formulalist))
		=>
	(assert 	(TripleTemplate
		(subject ?superpattern)
		(predicate _:qqadded-pattern-from)
		(object ?subpattern)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?superpattern)
			(eq ?fct:predicate _:qqformulalist))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?superpattern)
		(predicate _:qqformulalist)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?formulalist ?subpattern ))))

)

(defrule rule-gen14238 
(or 	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?rifaction))
	(and 	(Member
		(instance ?rifrule)
		(class <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?rifaction))
	)
	)	=>
	(assert 	(TripleTemplate
		(subject ?rifrule)
		(predicate _:qqadd-as-action)
		(object ?rifaction)))

)

(defrule rule-gen14247 
	(TripleTemplate
		(subject ?super)
		(predicate _:qqadd-as-action)
		(object ?sub))
		(TripleTemplate
		(subject ?sub)
		(predicate _:qqadd-as-action)
		(object ?rifaction))
		=>
	(assert 	(TripleTemplate
		(subject ?super)
		(predicate _:qqadd-as-action)
		(object ?rifaction)))

)

(defrule rule-gen14254 
	(TripleTemplate
		(subject ?rifrule)
		(predicate _:qqadd-as-action)
		(object ?rifaction))
	(not	(Member
		(instance ?rifaction)
		(class <http://www.w3.org/2007/rif#Forall>)))
	(not	(Member
		(instance ?rifaction)
		(class <http://www.w3.org/2007/rif#Implies>)))
		=>
	(assert 	(Member
		(instance ?rifaction)
		(class <http://white.gobo/modelA#ActionGenerator>)))

)

(defrule rule-gen14262 
	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://white.gobo/modelA#as-defrule>)
		(object ?defrule))
		(TripleTemplate
		(subject ?rifrule)
		(predicate _:qqadd-as-action)
		(object ?rifaction))
	(or 	(TripleTemplate
		(subject ?rifaction)
		(predicate <http://white.gobo/modelA#as-action>)
		(object ?clipsaction))
		(TripleTemplate
		(subject ?rifaction)
		(predicate <http://example.com/as-action>)
		(object ?clipsaction))
	)
		=>
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://clips.script/action>)
		(object ?clipsaction)))

)

(defrule rule-gen14275 
	(TripleTemplate
		(subject ?rifvar)
		(predicate _:qquse-expression-from)
		(object ?rifexpression))
		(Member
		(instance ?rifvar)
		(class <http://www.w3.org/2007/rif#Var>))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar))
		(TripleTemplate
		(subject ?rifexpression)
		(predicate <http://example.com/as-expression>)
		(object ?clipsexpression))
		=>
	(assert 	(TripleTemplate
		(subject ?clipsvar)
		(predicate <http://clips.script/var-as-const-expr>)
		(object ?clipsexpression)))

)
;autogenerated group rules

(defrule rule-gen14287 
	(Member
		(instance ?rifexternal)
		(class <http://white.gobo/modelA#TestPatternExternalGenerator>))
		=>
	(assert 	(Member
		(instance ?rifexternal)
		(class <http://white.gobo/modelA#ExpressionGenerator>)))

)

(defrule rule-gen14290 
	(Member
		(instance ?rifexternal)
		(class <http://white.gobo/modelA#TestPatternExternalGenerator>))
		(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://example.com/as-expression>)
		(object ?action))
		=>
(bind ?pattern (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?pattern)))
	(assert 	(Member
		(instance ?pattern)
		(class <http://clips.script/TestCE>)))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/function-call>)
		(object ?action)))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen14296 (declare (salience 15))
	(TripleTemplate
		(subject ?function)
		(predicate <http://example.com/add-args-from>)
		(object ?rifarglist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rifarglist ))
		(TripleTemplate
		(subject ?firstarg)
		(predicate <http://example.com/as-expression>)
		(object ?clipsexpression))
	(test (eq ?firstarg(<http://www.w3.org/2007/rif-builtin-function#get> ?rifarglist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?function) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?functionargs ?trpl:object))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?function)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?functionargs ?clipsexpression ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?function)
			(eq ?fct:predicate <http://example.com/add-args-from>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://example.com/add-args-from>)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?rifarglist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))

)

(defrule rule-gen14303 (declare (salience 10))
	(Member
		(instance ?rifexternal)
		(class <http://www.w3.org/2007/rif#External>))
		(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?content))
		(TripleTemplate
		(subject ?content)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifop))
		(TripleTemplate
		(subject ?rifop)
		(predicate <http://example.com/as-expression>)
		(object ?functionsymbol))
		(TripleTemplate
		(subject ?functionsymbol)
		(predicate <http://clips.script/symbol>)
		(object ?functionname))
		(TripleTemplate
		(subject ?content)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?rifarglist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rifarglist ))
		=>
(bind ?function (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?function ))))
	(assert 	(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://example.com/as-expression>)
		(object ?function)))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-name>)
		(object ?functionname)))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://example.com/add-args-from>)
		(object ?rifarglist)))

)
;autogenerated group rules

(defrule rule-gen14321 
	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#TestPatternRightAssignGenerator>))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifleft))
		=>
	(assert 	(Member
		(instance ?rifleft)
		(class <http://white.gobo/modelA#ExpressionGenerator>)))

)

(defrule rule-gen14327 
	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#TestPatternLeftAssignGenerator>))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifleft))
		(TripleTemplate
		(subject ?rifleft)
		(predicate <http://example.com/as-constraint>)
		(object ?assignvar))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?rifright))
		(TripleTemplate
		(subject ?rifright)
		(predicate <http://example.com/as-expression>)
		(object ?rightexpr))
		=>
	(assert 	(TripleTemplate
		(subject ?assignvar)
		(predicate <http://clips.script/var-as-const-expr>)
		(object ?rightexpr)))

)

(defrule rule-gen14342 
	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#TestPatternRightAssignGenerator>))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?rifright))
		(TripleTemplate
		(subject ?rifright)
		(predicate <http://example.com/as-expression>)
		(object ?assignvar))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifleft))
		(TripleTemplate
		(subject ?rifleft)
		(predicate <http://example.com/as-expression>)
		(object ?leftexpr))
		=>
	(assert 	(TripleTemplate
		(subject ?assignvar)
		(predicate <http://clips.script/var-as-const-expr>)
		(object ?leftexpr)))

)

(defrule rule-gen14357 
	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#TestPatternEqualGenerator>))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifleft))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?rifright))
		=>
	(assert 	(Member
		(instance ?rifleft)
		(class <http://white.gobo/modelA#ExpressionGenerator>)))
	(assert 	(Member
		(instance ?rifright)
		(class <http://white.gobo/modelA#ExpressionGenerator>)))

)

(defrule rule-gen14366 
	(Member
		(instance ?rifequal)
		(class <http://white.gobo/modelA#TestPatternEqualGenerator>))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?rifleft))
		(TripleTemplate
		(subject ?rifleft)
		(predicate <http://example.com/as-expression>)
		(object ?leftexpr))
		(TripleTemplate
		(subject ?rifequal)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?rifright))
		(TripleTemplate
		(subject ?rifright)
		(predicate <http://example.com/as-expression>)
		(object ?rightexpr))
	(not(exists 	(TripleTemplate
		(subject ?rifequal)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?x))))
		=>
(bind ?action (<http://white.gobo/new-blanknode>))(bind ?pattern (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifequal)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?pattern)))
	(assert 	(Member
		(instance ?pattern)
		(class <http://clips.script/TestCE>)))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/function-call>)
		(object ?action)))
	(assert 	(TripleTemplate
		(subject ?action)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?action)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?leftexpr ?rightexpr ))))

)
;autogenerated group rules

(defrule rule-gen14384 
(or 	(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?clause))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?clause))
	)
	(or 	(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#SubClass>))
		(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#Member>))
	)
		=>
(bind ?clipsaction (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?clause)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsaction ))))
	(assert 	(TripleTemplate
		(subject ?clipsaction)
		(predicate <http://example.com/assert-uses-pattern-from>)
		(object ?clause)))

)

(defrule rule-gen14399 
	(Member
		(instance ?rifassert)
		(class <http://www.w3.org/2007/rif#Assert>))
		(TripleTemplate
		(subject ?rifassert)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?clause))
	(or 	(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#SubClass>))
		(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#Member>))
	)
		=>
(bind ?clipsaction (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifassert)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsaction ))))
	(assert 	(TripleTemplate
		(subject ?clipsaction)
		(predicate <http://example.com/assert-uses-pattern-from>)
		(object ?clause)))

)

(defrule rule-gen14413 
	(Member
		(instance ?rifretract)
		(class <http://www.w3.org/2007/rif#Retract>))
		(TripleTemplate
		(subject ?rifretract)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?clause))
	(or 	(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#SubClass>))
		(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#Member>))
	)
		=>
(bind ?clipsaction (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifretract)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsaction ))))
	(assert 	(TripleTemplate
		(subject ?clipsaction)
		(predicate <http://clips.script/function-name>)
		(object "retract")))
	(assert 	(TripleTemplate
		(subject ?clipsaction)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?clipsaction)
		(predicate <http://example.com/retract-uses-pattern-from>)
		(object ?clause)))

)

(defrule rule-gen14427 
	(Member
		(instance ?rifretract)
		(class <http://www.w3.org/2007/rif#Retract>))
		(TripleTemplate
		(subject ?rifretract)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?rifterm))
		(TripleTemplate
		(subject ?rifterm)
		(predicate <http://example.com/as-expression>)
		(object ?clipsterm))
		=>
(bind ?expandtriples (<http://white.gobo/new-blanknode>))(bind ?findtriples (<http://white.gobo/new-blanknode>))(bind ?tmpvar (<http://white.gobo/new-blanknode>))(bind ?triplequery (<http://white.gobo/new-blanknode>))(bind ?clipsretract (<http://white.gobo/new-blanknode>))(bind ?slotsubj (<http://white.gobo/new-blanknode>))(bind ?tripletemplate (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifretract)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsretract ))))
	(assert 	(TripleTemplate
		(subject ?clipsretract)
		(predicate <http://clips.script/function-name>)
		(object "retract")))
	(assert 	(TripleTemplate
		(subject ?clipsretract)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expandtriples ))))
	(assert 	(TripleTemplate
		(subject ?expandtriples)
		(predicate <http://clips.script/function-name>)
		(object "expand%24")))
	(assert 	(TripleTemplate
		(subject ?expandtriples)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?findtriples ))))
	(assert 	(Member
		(instance ?findtriples)
		(class <http://clips.script/FindAllFacts>)))
	(assert 	(TripleTemplate
		(subject ?findtriples)
		(predicate <http://clips.script/fact-set-template>)
		(object ?tripletemplate)))
	(assert 	(TripleTemplate
		(subject ?findtriples)
		(predicate <http://clips.script/query>)
		(object ?triplequery)))
	(assert 	(TripleTemplate
		(subject ?tripletemplate)
		(predicate <http://clips.script/deftemplate-name>)
		(object "TripleTemplate")))
	(assert 	(TripleTemplate
		(subject ?tripletemplate)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object ?tmpvar)))
	(assert 	(TripleTemplate
		(subject ?triplequery)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?triplequery)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsterm ?slotsubj ))))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-variable>)
		(object ?tmpvar)))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-slot-name>)
		(object "subject")))
	(assert 	(Member
		(instance ?tmpvar)
		(class <http://clips.script/Variable>)))
	(assert 	(Member
		(instance ?tmpvar)
		(class <http://example.com/Variable>)))

)

(defrule rule-gen14436 
	(Member
		(instance ?rifmodify)
		(class <http://www.w3.org/2007/rif#Modify>))
		(TripleTemplate
		(subject ?rifmodify)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?clause))
		(Member
		(instance ?clause)
		(class <http://www.w3.org/2007/rif#Frame>))
		(TripleTemplate
		(subject ?clause)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?rifobject))
		(TripleTemplate
		(subject ?rifobject)
		(predicate <http://example.com/as-expression>)
		(object ?subjterm))
		=>
(bind ?clipsretractall (<http://white.gobo/new-blanknode>))(bind ?tmpvar (<http://white.gobo/new-blanknode>))(bind ?clipsassert (<http://white.gobo/new-blanknode>))(bind ?slotsubj (<http://white.gobo/new-blanknode>))(bind ?comparesubject (<http://white.gobo/new-blanknode>))(bind ?comparepredicate (<http://white.gobo/new-blanknode>))(bind ?tripletemplate (<http://white.gobo/new-blanknode>))(bind ?comparesubjectandpredicate (<http://white.gobo/new-blanknode>))(bind ?clipsretractvar (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?tmpvar)
		(class <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?clause)
		(predicate <http://example.com/as-expression>)
		(object ?tmpvar)))
	(assert 	(TripleTemplate
		(subject ?rifmodify)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsretractall ?clipsassert ))))
	(assert 	(Member
		(instance ?clipsretractall)
		(class <http://clips.script/DoForAllFacts>)))
	(assert 	(TripleTemplate
		(subject ?clipsretractall)
		(predicate <http://clips.script/fact-set-template>)
		(object ?tripletemplate)))
	(assert 	(TripleTemplate
		(subject ?tripletemplate)
		(predicate <http://clips.script/deftemplate-name>)
		(object "TripleTemplate")))
	(assert 	(TripleTemplate
		(subject ?tripletemplate)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object ?tmpvar)))
	(assert 	(TripleTemplate
		(subject ?clipsretractall)
		(predicate <http://clips.script/query>)
		(object ?comparesubjectandpredicate)))
	(assert 	(TripleTemplate
		(subject ?comparesubjectandpredicate)
		(predicate <http://clips.script/function-name>)
		(object "and")))
	(assert 	(TripleTemplate
		(subject ?comparesubjectandpredicate)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?comparesubject ?comparepredicate ))))
	(assert 	(TripleTemplate
		(subject ?comparesubject)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?comparesubject)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsubj ?subjterm ))))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-variable>)
		(object ?tmpvar)))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-slot-name>)
		(object "subject")))
	(assert 	(TripleTemplate
		(subject ?comparepredicate)
		(predicate <http://clips.script/function-name>)
		(object "or")))
	(assert 	(TripleTemplate
		(subject ?comparepredicate)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?comparepredicate)
		(predicate <http://example.com/compare-slotkeys-varpredicate-rifframe>)
		(object ?clause)))
	(assert 	(TripleTemplate
		(subject ?comparepredicate)
		(predicate <http://example.com/compare-slotkeys-varpredicate-tmpvar>)
		(object ?tmpvar)))
	(assert 	(TripleTemplate
		(subject ?comparepredicate)
		(predicate <http://example.com/add-compare-predicate-from>)
		(object ?clause)))
	(assert 	(TripleTemplate
		(subject ?clipsretractall)
		(predicate <http://clips.script/action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?clipsretractvar ))))
	(assert 	(TripleTemplate
		(subject ?clipsretractvar)
		(predicate <http://clips.script/function-name>)
		(object "retract")))
	(assert 	(TripleTemplate
		(subject ?clipsretractvar)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?tmpvar ))))
	(assert 	(TripleTemplate
		(subject ?clipsassert)
		(predicate <http://example.com/assert-uses-pattern-from>)
		(object ?clause)))

)

(defrule rule-gen14450 
	(TripleTemplate
		(subject ?comparepredicate)
		(predicate <http://example.com/compare-slotkeys-varpredicate-rifframe>)
		(object ?rifframe))
		(TripleTemplate
		(subject ?comparepredicate)
		(predicate <http://example.com/compare-slotkeys-varpredicate-tmpvar>)
		(object ?tmpvar))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
	(test (eq "1^^http://www.w3.org/2001/XMLSchema#integer"(<http://www.w3.org/2007/rif-builtin-function#count> ?slotlist )))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		(TripleTemplate
		(subject ?slotkey)
		(predicate <http://example.com/as-expression>)
		(object ?slotkeyterm))
		=>
(bind ?slotpred (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?slotpred)
		(predicate <http://clips.script/member-variable>)
		(object ?tmpvar)))
	(assert 	(TripleTemplate
		(subject ?slotpred)
		(predicate <http://clips.script/member-slot-name>)
		(object "predicate")))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?comparepredicate)
			(eq ?fct:predicate <http://clips.script/function-name>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?comparepredicate)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?comparepredicate)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?comparepredicate)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotpred ?slotkeyterm ))))

)

(defrule rule-gen14466 
	(TripleTemplate
		(subject ?clipsassert)
		(predicate <http://example.com/assert-uses-pattern-from>)
		(object ?rifformula))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://example.com/as-rhspattern>)
		(object ?rhspattern))
		=>
	(assert 	(TripleTemplate
		(subject ?clipsassert)
		(predicate <http://clips.script/assert>)
		(object ?rhspattern)))

)

(defrule rule-gen14473 
	(TripleTemplate
		(subject ?clipsretract)
		(predicate <http://example.com/retract-uses-pattern-from>)
		(object ?rifformula))
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://example.com/as-rhspattern>)
		(object ?rhspattern))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?clipsretract) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?retracttargets ?trpl:object))(bind ?clipsassert (<http://white.gobo/new-blanknode>))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?clipsretract)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?clipsretract)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?retracttargets ?clipsassert ))))
	(assert 	(TripleTemplate
		(subject ?clipsassert)
		(predicate <http://clips.script/assert>)
		(object ?rhspattern)))

)

(defrule rule-gen14480 
	(Member
		(instance ?rifatom)
		(class <http://example.com/RHSPatternGenerator>))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?op))
		(TripleTemplate
		(subject ?op)
		(predicate <http://example.com/as-expression>)
		(object ?expressionop))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?arglist ))
		=>
(bind ?rhspattern (<http://white.gobo/new-blanknode>))(bind ?slotop (<http://white.gobo/new-blanknode>))(bind ?slotargs (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://example.com/as-rhspattern>)
		(object ?rhspattern)))
	(assert 	(TripleTemplate
		(subject ?rhspattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Atom")))
	(assert 	(TripleTemplate
		(subject ?rhspattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotop ?slotargs ))))
	(assert 	(TripleTemplate
		(subject ?slotop)
		(predicate <http://clips.script/slot-name>)
		(object "op")))
	(assert 	(TripleTemplate
		(subject ?slotop)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressionop ))))
	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://clips.script/slot-name>)
		(object "args")))
	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://example.com/add-atom-args-rhspattern>)
		(object ?arglist)))

)

(defrule rule-gen14492 
	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?op))
		(TripleTemplate
		(subject ?op)
		(predicate <http://example.com/as-expression>)
		(object ?expressionop))
	(not(exists 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))))
		=>
(bind ?slotop (<http://white.gobo/new-blanknode>))(bind ?rhspattern (<http://white.gobo/new-blanknode>))(bind ?slotargs (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://example.com/as-rhspattern>)
		(object ?rhspattern)))
	(assert 	(TripleTemplate
		(subject ?rhspattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Atom")))
	(assert 	(TripleTemplate
		(subject ?rhspattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotop ?slotargs ))))
	(assert 	(TripleTemplate
		(subject ?slotop)
		(predicate <http://clips.script/slot-name>)
		(object "op")))
	(assert 	(TripleTemplate
		(subject ?slotop)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressionop ))))
	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://clips.script/slot-name>)
		(object "args")))
	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)
;autogenerated group rules

(defrule rule-gen14502 (declare (salience 10))
	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://example.com/add-atom-args-rhspattern>)
		(object ?arglist))
		(TripleTemplate
		(subject ?firstarg)
		(predicate <http://example.com/as-expression>)
		(object ?clipsexpr))
	(test (eq ?firstarg(<http://www.w3.org/2007/rif-builtin-function#get> ?arglist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?slotargs) (eq ?trpl:predicate <http://clips.script/field>))
		(bind ?oldfield ?trpl:object))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?slotargs)
			(eq ?fct:predicate <http://example.com/add-atom-args-rhspattern>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://example.com/add-atom-args-rhspattern>)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?arglist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?slotargs)
			(eq ?fct:predicate <http://clips.script/field>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?oldfield ?clipsexpr ))))

)
;autogenerated group rules

(defrule rule-gen14509 (declare (salience -100))
	(TripleTemplate
		(subject ?clipsfunction)
		(predicate <http://example.com/add-atom-args-rhspattern>)
		(object ?rifrestargs))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-not-equal> "0^^http://www.w3.org/2001/XMLSchema#integer" (<http://www.w3.org/2007/rif-builtin-function#count> ?rifrestargs ) ))
		=>
	(assert 	(Member
		(instance ?clipsfunction)
		(class <http://example.com/cant-translate-atom-as-rhspattern>)))
(<http://white.gobo/set-graph-in-errorstate> "Translation%20of%20rif%3AAtom%20to%20rhs-pattern%20failed.%20Didnt%20translated%20all%20rif%3Aargs.%28ex%3Acant-translate-atom-as-rhspattern%29" )
)

(defrule rule-gen14513 (declare (salience 10))
	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://example.com/add-atom-args-rhspattern>)
		(object ?list))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-equal> "0^^http://www.w3.org/2001/XMLSchema#integer" (<http://www.w3.org/2007/rif-builtin-function#count> ?list ) ))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?slotargs) (and (eq ?fct:predicate <http://example.com/add-atom-args-rhspattern>)(eq ?fct:object ?list)))
		(retract ?fct))
)

(defrule rule-gen14517 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?object))
		(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?slotvalue))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		(TripleTemplate
		(subject ?object)
		(predicate <http://example.com/as-expression>)
		(object ?expressionsubject))
		(TripleTemplate
		(subject ?slotkey)
		(predicate <http://example.com/as-expression>)
		(object ?expressionpredicate))
		(TripleTemplate
		(subject ?slotvalue)
		(predicate <http://example.com/as-expression>)
		(object ?expressionobject))
		=>
(bind ?slotpredicate (<http://white.gobo/new-blanknode>))(bind ?slotsubject (<http://white.gobo/new-blanknode>))(bind ?slotobject (<http://white.gobo/new-blanknode>))(bind ?rhspattern (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-rhspattern>)
		(object ?rhspattern)))
	(assert 	(TripleTemplate
		(subject ?rhspattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "TripleTemplate")))
	(assert 	(TripleTemplate
		(subject ?rhspattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsubject ?slotpredicate ?slotobject ))))
	(assert 	(TripleTemplate
		(subject ?slotsubject)
		(predicate <http://clips.script/slot-name>)
		(object "subject")))
	(assert 	(TripleTemplate
		(subject ?slotsubject)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressionsubject ))))
	(assert 	(TripleTemplate
		(subject ?slotpredicate)
		(predicate <http://clips.script/slot-name>)
		(object "predicate")))
	(assert 	(TripleTemplate
		(subject ?slotpredicate)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressionpredicate ))))
	(assert 	(TripleTemplate
		(subject ?slotobject)
		(predicate <http://clips.script/slot-name>)
		(object "object")))
	(assert 	(TripleTemplate
		(subject ?slotobject)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressionobject ))))

)

(defrule rule-gen14539 
	(TripleTemplate
		(subject ?rifmember)
		(predicate <http://www.w3.org/2007/rif#instance>)
		(object ?instance))
		(TripleTemplate
		(subject ?instance)
		(predicate <http://example.com/as-expression>)
		(object ?expressioninstance))
		(TripleTemplate
		(subject ?rifmember)
		(predicate <http://www.w3.org/2007/rif#class>)
		(object ?cls))
		(TripleTemplate
		(subject ?cls)
		(predicate <http://example.com/as-expression>)
		(object ?expressioncls))
		=>
(bind ?rhspattern (<http://white.gobo/new-blanknode>))(bind ?slotinstance (<http://white.gobo/new-blanknode>))(bind ?slotcls (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifmember)
		(predicate <http://example.com/as-rhspattern>)
		(object ?rhspattern)))
	(assert 	(TripleTemplate
		(subject ?rhspattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Member")))
	(assert 	(TripleTemplate
		(subject ?rhspattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotinstance ?slotcls ))))
	(assert 	(TripleTemplate
		(subject ?slotinstance)
		(predicate <http://clips.script/slot-name>)
		(object "instance")))
	(assert 	(TripleTemplate
		(subject ?slotinstance)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressioninstance ))))
	(assert 	(TripleTemplate
		(subject ?slotcls)
		(predicate <http://clips.script/slot-name>)
		(object "class")))
	(assert 	(TripleTemplate
		(subject ?slotcls)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressioncls ))))

)

(defrule rule-gen14552 
	(TripleTemplate
		(subject ?rifsuperclass)
		(predicate <http://www.w3.org/2007/rif#sub>)
		(object ?sub))
		(TripleTemplate
		(subject ?sub)
		(predicate <http://example.com/as-expression>)
		(object ?expressionsub))
		(TripleTemplate
		(subject ?rifsuperclass)
		(predicate <http://www.w3.org/2007/rif#super>)
		(object ?super))
		(TripleTemplate
		(subject ?super)
		(predicate <http://example.com/as-expression>)
		(object ?expressionsuper))
		=>
(bind ?slotsub (<http://white.gobo/new-blanknode>))(bind ?rhspattern (<http://white.gobo/new-blanknode>))(bind ?slotsuper (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifsuperclass)
		(predicate <http://example.com/as-rhspattern>)
		(object ?rhspattern)))
	(assert 	(TripleTemplate
		(subject ?rhspattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Subclass")))
	(assert 	(TripleTemplate
		(subject ?rhspattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsub ?slotsuper ))))
	(assert 	(TripleTemplate
		(subject ?slotsub)
		(predicate <http://clips.script/slot-name>)
		(object "sub")))
	(assert 	(TripleTemplate
		(subject ?slotsub)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressionsub ))))
	(assert 	(TripleTemplate
		(subject ?slotsuper)
		(predicate <http://clips.script/slot-name>)
		(object "super")))
	(assert 	(TripleTemplate
		(subject ?slotsuper)
		(predicate <http://clips.script/field>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expressionsuper ))))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen14565 (declare (salience -100))
	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(not(exists 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode))))
	(not(exists 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsnode))))
		=>
	(assert 	(Member
		(instance ?rifvar)
		(class <http://white.gobo/modelA#missing-var-binding>)))
(<http://white.gobo/set-graph-in-errorstate> (<http://www.w3.org/2007/rif-builtin-function#concat> "Missing%20binding%20for%20rif%3AVar%20with%20name%20" ?varname "%20%28modelA%3Amissing-var-binding%29.%20Might%20be%20missing%20mention%20of%20variable%20in%20rif%3AForall%20or%20rif%3AExists." ) )
)
;autogenerated group rules

(defrule rule-gen14575 (declare (salience -102))
	(Member
		(instance ?clipsvar)
		(class <http://clips.script/Variable>))
	(not(exists 	(TripleTemplate
		(subject ?clipsvar)
		(predicate <http://clips.script/variable-name>)
		(object ?varname))))
	(not(exists 	(TripleTemplate
		(subject ?clipsvar)
		(predicate <http://clips.script/var-as-const-expr>)
		(object ?varname))))
		=>
	(assert 	(Member
		(instance ?clipsvar)
		(class <http://white.gobo/modelA#missing-var-expression>)))
(<http://white.gobo/set-graph-in-errorstate> "A%20cs%3AVariable%20has%20no%20expression.%20missing%20cs%3Avariable-name%20or%20cs%3Avar-as-const-expr.%28modelA%3Amissing-var-expression%29" )
)

(defrule rule-gen14584 (declare (salience -102))
	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsvar))
	(not(exists 	(TripleTemplate
		(subject ?rifvarchild)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar))))
		=>
(<http://white.gobo/set-graph-in-errorstate> (<http://www.w3.org/2007/rif-builtin-function#concat> "Missing%20use%20for%20variable%20with%20name%20" ?varname ) )
)
;autogenerated group rules

(defrule rule-gen14594 
	(Member
		(instance ?factvar)
		(class <http://example.com/Variable>))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?factvar))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(not(exists 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object ?factname))))
		=>
	(assert 	(Member
		(instance ?factvar)
		(class <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))

)

(defrule rule-gen14606 
	(Member
		(instance ?factvar)
		(class <http://example.com/Variable>))
	(not(exists 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?factvar))))
		(Atom
		(op <http://example.com/currentfactindex>)
		(args ?factindex ))
	(not(exists 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object ?factname))))
		=>
	(assert 	(Member
		(instance ?factvar)
		(class <http://clips.script/Variable>)))
	(do-for-all-facts ((?fct Atom)) (and (eq ?fct:op <http://example.com/currentfactindex>) (eq ?fct:args (eq ?fct:args (create$  ?factindex))))
		(retract ?fct))	(assert 	(Atom
		(op <http://example.com/currentfactindex>)
		(args (<http://www.w3.org/2007/rif-builtin-function#numeric-add> ?factindex "1^^http://www.w3.org/2001/XMLSchema#integer" ) )))
	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object (<http://www.w3.org/2007/rif-builtin-function#concat> "fcct" ?factindex ))))

)

(defrule rule-gen14617 
	(Member
		(instance ?factvar)
		(class <http://clips.script/Variable>))
		(Atom
		(op <http://example.com/currentfactindex>)
		(args ?factindex ))
	(not(exists 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object ?factname))))
	(or 	(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Member>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Subclass>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Equal>))
	)
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://example.com/as-expression>)
		(object ?factvar))
		=>
	(do-for-all-facts ((?fct Atom)) (and (eq ?fct:op <http://example.com/currentfactindex>) (eq ?fct:args (eq ?fct:args (create$  ?factindex))))
		(retract ?fct))	(assert 	(Atom
		(op <http://example.com/currentfactindex>)
		(args (<http://www.w3.org/2007/rif-builtin-function#numeric-add> ?factindex "1^^http://www.w3.org/2001/XMLSchema#integer" ) )))
	(assert 	(Member
		(instance ?factvar)
		(class <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object (<http://www.w3.org/2007/rif-builtin-function#concat> "fct" ?factindex ))))

)
(deffacts rule-gen14638
		(Atom
		(op <http://example.com/currentfactindex>)
		(args "1^^http://www.w3.org/2001/XMLSchema#integer" )))

;autogenerated group rules

(defrule rule-gen14639 (declare (salience 100))
(or 	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#if>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#payload>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#class>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#instance>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#sub>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#super>)
		(object ?child))
	)
	(not 	(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object ?x)))
	(not 	(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/2007/rif#value>)
		(object ?x)))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child)))

)

(defrule rule-gen14685 (declare (salience 100))
	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?atom))
		(TripleTemplate
		(subject ?atom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?childlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?childlist ))
	(or 	(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Var>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Const>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#List>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#External>))
	)
	(not 	(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object ?x)))
	(not 	(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/2007/rif#value>)
		(object ?x)))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?childlist ?child ))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child)))

)

(defrule rule-gen14700 (declare (salience 100))
	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?childkey))
	(not 	(TripleTemplate
		(subject ?childkey)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object ?x)))
	(not 	(TripleTemplate
		(subject ?childkey)
		(predicate <http://www.w3.org/2007/rif#value>)
		(object ?x)))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?childkey)))

)

(defrule rule-gen14707 (declare (salience 100))
	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?childvalue))
	(not 	(TripleTemplate
		(subject ?childvalue)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object ?x)))
	(not 	(TripleTemplate
		(subject ?childvalue)
		(predicate <http://www.w3.org/2007/rif#value>)
		(object ?x)))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?childvalue)))

)

(defrule rule-gen14714 (declare (salience 100))
(or 	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#actions>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?childlist))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?childlist ))
	(or 	(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Group>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Forall>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Assert>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Retract>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Do>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Modify>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Subclass>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Equal>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Member>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Var>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Const>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#List>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#And>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#INeg>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Or>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Not>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Exists>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Execute>))
	)
	(not 	(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object ?x)))
	(not 	(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/2007/rif#value>)
		(object ?x)))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?childlist ?child ))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child)))

)

(defrule rule-gen14772 (declare (salience 100))
	(TripleTemplate
		(subject ?rifdo)
		(predicate <http://www.w3.org/2007/rif#actionVar>)
		(object ?actionvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?actionvar ))
		(Member
		(instance ?rifvar)
		(class <http://www.w3.org/2007/rif#Var>))
		(Member
		(instance ?rifframe)
		(class <http://www.w3.org/2007/rif#Frame>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifvar ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifframe ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifframe)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifdo)))

)

(defrule rule-gen14780 (declare (salience 100))
	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child))
		(TripleTemplate
		(subject ?child)
		(predicate <http://example.com/inherits-data>)
		(object ?grandchild))
	(or 	(Member
		(instance ?grandchild)
		(class <http://www.w3.org/2007/rif#Const>))
		(Member
		(instance ?grandchild)
		(class <http://www.w3.org/2007/rif#Var>))
	)
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?grandchild)))

)
;autogenerated group rules

(defrule rule-gen14791 
	(TripleTemplate
		(subject ?rifdo)
		(predicate <http://www.w3.org/2007/rif#actionVar>)
		(object ?actionvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?actionvar ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifvar ))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifdo)))

)

(defrule rule-gen14798 
	(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#vars>)
		(object ?varlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?varlist ))
		(Member
		(instance ?rifvar)
		(class <http://www.w3.org/2007/rif#Var>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?varlist ?rifvar ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifforall)))

)

(defrule rule-gen14804 
	(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#vars>)
		(object ?varlist))
		(Member
		(instance ?rifforall)
		(class <http://www.w3.org/2007/rif#Exists>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?varlist ))
		(Member
		(instance ?rifvar)
		(class <http://www.w3.org/2007/rif#Var>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?varlist ?rifvar ))
		=>
	(assert 	(Member
		(instance ?rifvar)
		(class <http://example.com/brubru5>)))

)

(defrule rule-gen14812 
	(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#vars>)
		(object ?varlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?varlist ))
		(Member
		(instance ?rifvar)
		(class <http://www.w3.org/2007/rif#Var>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?varlist ?rifvar ))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?clipsnode)
		(class <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen14818 
	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsvar))
		(TripleTemplate
		(subject ?clipspattern)
		(predicate <http://clips.script/constraints>)
		(object ?constraintlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?constraintlist ?clipsvar ))
		=>
	(assert 	(Member
		(instance ?clipsvar)
		(class <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?clipsvar)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))

)

(defrule rule-gen14828 
	(TripleTemplate
		(subject ?varparent)
		(predicate <http://example.com/inherits-data>)
		(object ?varchild))
		(TripleTemplate
		(subject ?varparent)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?varchild)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?varparent)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsvar))
		=>
	(assert 	(TripleTemplate
		(subject ?varchild)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar)))
	(assert 	(TripleTemplate
		(subject ?varchild)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsvar)))

)
;autogenerated group rules

(defrule rule-gen14841 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#value>)
		(object ?value))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/string>)
		(object (<http://white.gobo/literal-to-clipsconstant> ?value ))))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen14845 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object ?iristring))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/symbol>)
		(object (<http://white.gobo/iri-to-clipsconstant> ?iristring ))))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen14849 
	(Member
		(instance ?rifdocument)
		(class <http://www.w3.org/2007/rif#Document>))
		(TripleTemplate
		(subject ?rifdocument)
		(predicate <http://example.com/inherits-data>)
		(object ?riflocal))
		(TripleTemplate
		(subject ?riflocal)
		(predicate <http://www.w3.org/2007/rif#constname>)
		(object ?name))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?riflocal)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?riflocal)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/symbol>)
		(object (<http://white.gobo/local-to-clipsconstant> ?rifdocument ?name ))))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen14858 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#actions>)
		(object ?actionlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?actionlist ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/in-transform-do>)
		(object ?actionlist)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/out-transform-do>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen14862 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/in-transform-do>)
		(object ?in))
	(test (eq "0^^http://www.w3.org/2001/XMLSchema#integer"(<http://www.w3.org/2007/rif-builtin-function#count> ?in )))
		(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/out-transform-do>)
		(object ?out))
		=>
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-action>)
		(object ?out)))
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?rifnode) (and (eq ?fct:predicate <http://example.com/in-transform-do>)(eq ?fct:object ?in)))
		(retract ?fct))	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?rifnode) (and (eq ?fct:predicate <http://example.com/out-transform-do>)(eq ?fct:object ?out)))
		(retract ?fct))
)

(defrule rule-gen14869 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/in-transform-do>)
		(object ?in))
		(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/out-transform-do>)
		(object ?out))
		(TripleTemplate
		(subject ?firstaction)
		(predicate <http://example.com/as-action>)
		(object ?nextactions))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-not-equal> "0^^http://www.w3.org/2001/XMLSchema#integer" (<http://www.w3.org/2007/rif-builtin-function#count> ?in ) ))
	(test (eq ?firstaction(<http://www.w3.org/2007/rif-builtin-function#get> ?in "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?rifnode)
			(eq ?fct:predicate <http://example.com/in-transform-do>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/in-transform-do>)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?in "0^^http://www.w3.org/2001/XMLSchema#integer" ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?rifnode)
			(eq ?fct:predicate <http://example.com/out-transform-do>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/out-transform-do>)
		(object (<http://www.w3.org/2007/rif-builtin-function#concatenate> ?out ?nextactions ))))

)
;autogenerated group rules

(defrule rule-gen14879 
	(TripleTemplate
		(subject ?group)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?sentences))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?sentences ))
	(exists (and (or 	(Member
		(instance ?factable)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?factable)
		(class <http://www.w3.org/2007/rif#Member>))
		(Member
		(instance ?factable)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?factable)
		(class <http://www.w3.org/2007/rif#Subclass>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?sentences ?factable ))
	))
		=>
(bind ?deffacts (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?group)
		(predicate <http://example.com/combine-deffacts-in>)
		(object ?deffacts)))
	(assert 	(Member
		(instance ?deffacts)
		(class <http://clips.script/Deffacts>)))
	(assert 	(TripleTemplate
		(subject ?deffacts)
		(predicate <http://clips.script/rhs-pattern>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen14891 
	(TripleTemplate
		(subject ?group)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?sentences))
		(TripleTemplate
		(subject ?group)
		(predicate <http://example.com/combine-deffacts-in>)
		(object ?deffacts))
	(or 	(Member
		(instance ?factable)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?factable)
		(class <http://www.w3.org/2007/rif#Member>))
		(Member
		(instance ?factable)
		(class <http://www.w3.org/2007/rif#Subclass>))
		(Member
		(instance ?factable)
		(class <http://www.w3.org/2007/rif#Atom>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?sentences ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?sentences ?factable ))
		(TripleTemplate
		(subject ?factable)
		(predicate <http://example.com/as-rhspattern>)
		(object ?newrhspattern))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?deffacts) (eq ?trpl:predicate <http://clips.script/rhs-pattern>))
		(bind ?rhspatternlist ?trpl:object))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?deffacts)
			(eq ?fct:predicate <http://clips.script/rhs-pattern>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?deffacts)
		(predicate <http://clips.script/rhs-pattern>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?rhspatternlist ?newrhspattern ))))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen14909 (declare (salience -101))
	(TripleTemplate
		(subject ?rif)
		(predicate _:qqadd-args-as-expression-from)
		(object ?arglist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-greater-than> (<http://www.w3.org/2007/rif-builtin-function#count> ?arglist ) "0^^http://www.w3.org/2001/XMLSchema#integer" ))
		=>
	(assert 	(Member
		(instance ?rif)
		(class <http://example.com/couldnt-add-all-items>)))
(<http://white.gobo/set-graph-in-errorstate> "Missing%20items%20for%20list%28ex%3Acouldnt-add-all-items%29" )
)

(defrule rule-gen14913 (declare (salience 10))
	(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?rest))
	(not	(Member
		(instance ?rest)
		(class <http://www.w3.org/2007/rif#Var>)))
		=>
(<http://white.gobo/set-graph-in-errorstate> "rif%3Arest%20is%20only%20implemented%20for%20domain%20of%20type%20rif%3AVar" )
)

(defrule rule-gen14919 (declare (salience 10))
	(Member
		(instance ?riflist)
		(class <http://example.com/ExpressionGenerator>))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?itemlist ))
	(not(exists 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?rest))))
		=>
(bind ?function (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-expression>)
		(object ?function)))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-name>)
		(object "%3Chttp%3A%2F%2Fwww.w3.org%2F2007%2Frif-builtin-function%23make-list%3E")))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate _:qqadd-args-as-expression-from)
		(object ?itemlist)))

)
;autogenerated group rules

(defrule rule-gen14928 
	(TripleTemplate
		(subject ?function)
		(predicate _:qqadd-args-as-expression-from)
		(object ?itemlist))
		(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object ?currentexprlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-greater-than> (<http://www.w3.org/2007/rif-builtin-function#count> ?itemlist ) "0^^http://www.w3.org/2001/XMLSchema#integer" ))
		(TripleTemplate
		(subject ?firstarg)
		(predicate <http://example.com/as-expression>)
		(object ?firstasexpression))
	(test (eq ?firstarg(<http://www.w3.org/2007/rif-builtin-function#get> ?itemlist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?function)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?currentexprlist ?firstasexpression ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?function)
			(eq ?fct:predicate _:qqadd-args-as-expression-from))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?function)
		(predicate _:qqadd-args-as-expression-from)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?itemlist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))

)

(defrule rule-gen14938 
	(TripleTemplate
		(subject ?function)
		(predicate _:qqadd-args-as-expression-from)
		(object ?itemlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?itemlist ))
	(test (eq "0^^http://www.w3.org/2001/XMLSchema#integer"(<http://www.w3.org/2007/rif-builtin-function#count> ?itemlist )))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?function) (and (eq ?fct:predicate _:qqadd-args-as-expression-from)(eq ?fct:object ?itemlist)))
		(retract ?fct))
)

(defrule rule-gen14942 (declare (salience 10))
	(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ConstraintGenerator>))
		(Member
		(instance ?riflist)
		(class <http://www.w3.org/2007/rif#List>))
		=>
(bind ?listasvar (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-constraint>)
		(object ?listasvar)))
	(assert 	(Member
		(instance ?listasvar)
		(class <http://clips.script/Variable>)))
	(assert 	(Member
		(instance ?listasvar)
		(class <http://example.com/Variable>)))
	(assert 	(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ConstraintNeedsAdditionalPatterns>)))

)

(defrule rule-gen14947 (declare (salience 10))
	(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ListAsConstraint>))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#pattern-uses-constraint>)
		(object ?riflist))
		(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ConstraintGenerator>))
		(Member
		(instance ?riflist)
		(class <http://www.w3.org/2007/rif#List>))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?rest))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-constraint>)
		(object ?listvar))
		(TripleTemplate
		(subject ?rest)
		(predicate <http://example.com/as-constraint>)
		(object ?assign))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
	(not 	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#bound-variable>)
		(object ?assign)))
		=>
(bind ?function (<http://white.gobo/new-blanknode>))(bind ?position (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?assign)
		(predicate <http://clips.script/var-as-const-expr>)
		(object ?function)))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-name>)
		(object "%3Chttp%3A%2F%2Fwww.w3.org%2F2007%2Frif-builtin-function%23sublist%3E")))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?listvar ?position ))))
	(assert 	(TripleTemplate
		(subject ?position)
		(predicate <http://clips.script/string>)
		(object (<http://white.gobo/literal-to-clipsconstant> (<http://www.w3.org/2007/rif-builtin-function#count> ?itemlist ) ))))

)

(defrule rule-gen14969 (declare (salience 10))
	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#pattern-uses-constraint>)
		(object ?riflist))
		(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ConstraintGenerator>))
		(Member
		(instance ?riflist)
		(class <http://www.w3.org/2007/rif#List>))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?rest))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-constraint>)
		(object ?listvar))
		(TripleTemplate
		(subject ?rest)
		(predicate <http://example.com/as-constraint>)
		(object ?assign))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#bound-variable>)
		(object ?assign))
		=>
(bind ?position (<http://white.gobo/new-blanknode>))(bind ?testpattern (<http://white.gobo/new-blanknode>))(bind ?function (<http://white.gobo/new-blanknode>))(bind ?eq (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?testpattern)
		(class <http://clips.script/TestCE>)))
	(assert 	(TripleTemplate
		(subject ?testpattern)
		(predicate <http://clips.script/function-call>)
		(object ?eq)))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#lhs-pattern-after-conditions>)
		(object ?testpattern)))
	(assert 	(TripleTemplate
		(subject ?eq)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?eq)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?assign ?function ))))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-name>)
		(object "%3Chttp%3A%2F%2Fwww.w3.org%2F2007%2Frif-builtin-function%23sublist%3E")))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?listvar ?position ))))
	(assert 	(TripleTemplate
		(subject ?position)
		(predicate <http://clips.script/string>)
		(object (<http://white.gobo/literal-to-clipsconstant> (<http://www.w3.org/2007/rif-builtin-function#count> ?itemlist ) ))))

)

(defrule rule-gen14992 (declare (salience 10))
	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#pattern-uses-constraint>)
		(object ?riflist))
		(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ConstraintGenerator>))
		(Member
		(instance ?riflist)
		(class <http://www.w3.org/2007/rif#List>))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-constraint>)
		(object ?listvar))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?assign))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?itemlist ?rifvar ))
	(not 	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#bound-variable>)
		(object ?assign)))
		=>
(bind ?position (<http://white.gobo/new-blanknode>))(bind ?function (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?assign)
		(predicate <http://clips.script/var-as-const-expr>)
		(object ?function)))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-name>)
		(object "%3Chttp%3A%2F%2Fwww.w3.org%2F2007%2Frif-builtin-function%23get%3E")))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?listvar ?position ))))
	(assert 	(TripleTemplate
		(subject ?position)
		(predicate <http://clips.script/string>)
		(object (<http://white.gobo/literal-to-clipsconstant> (<http://www.w3.org/2007/rif-builtin-function#get> (<http://www.w3.org/2007/rif-builtin-function#index-of> ?itemlist ?rifvar ) "0^^http://www.w3.org/2001/XMLSchema#integer" ) ))))

)

(defrule rule-gen15009 (declare (salience 10))
	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#pattern-uses-constraint>)
		(object ?riflist))
		(Member
		(instance ?riflist)
		(class <http://white.gobo/modelA#ConstraintGenerator>))
		(Member
		(instance ?riflist)
		(class <http://www.w3.org/2007/rif#List>))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-constraint>)
		(object ?listvar))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?assign))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?itemlist ?rifvar ))
		(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#bound-variable>)
		(object ?assign))
		=>
(bind ?eq (<http://white.gobo/new-blanknode>))(bind ?position (<http://white.gobo/new-blanknode>))(bind ?testpattern (<http://white.gobo/new-blanknode>))(bind ?function (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?testpattern)
		(class <http://clips.script/TestCE>)))
	(assert 	(TripleTemplate
		(subject ?testpattern)
		(predicate <http://clips.script/function-call>)
		(object ?eq)))
	(assert 	(TripleTemplate
		(subject ?formula)
		(predicate <http://white.gobo/modelA#lhs-pattern-after-conditions>)
		(object ?testpattern)))
	(assert 	(TripleTemplate
		(subject ?eq)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?eq)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?assign ?function ))))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-name>)
		(object "%3Chttp%3A%2F%2Fwww.w3.org%2F2007%2Frif-builtin-function%23get%3E")))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?listvar ?position ))))
	(assert 	(TripleTemplate
		(subject ?position)
		(predicate <http://clips.script/string>)
		(object (<http://white.gobo/literal-to-clipsconstant> (<http://www.w3.org/2007/rif-builtin-function#get> (<http://www.w3.org/2007/rif-builtin-function#index-of> ?itemlist ?rifvar ) "0^^http://www.w3.org/2001/XMLSchema#integer" ) ))))

)

(defrule rule-gen15029 (declare (salience 10))
	(TripleTemplate
		(subject ?slotitems)
		(predicate _:qqadd-args-as-constraints-from)
		(object ?itemlist))
		(TripleTemplate
		(subject ?slotitems)
		(predicate <http://clips.script/constraints>)
		(object ?listconstraints))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?itemlist ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-greater-than> (<http://www.w3.org/2007/rif-builtin-function#count> ?itemlist ) "0^^http://www.w3.org/2001/XMLSchema#integer" ))
		(TripleTemplate
		(subject ?firstarg)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsconstraint))
	(test (eq ?firstarg(<http://www.w3.org/2007/rif-builtin-function#get> ?itemlist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?slotitems)
			(eq ?fct:predicate <http://clips.script/constraints>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?slotitems)
		(predicate <http://clips.script/constraints>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?listconstraints ?clipsconstraint ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?slotitems)
			(eq ?fct:predicate _:qqadd-args-as-constraints-from))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?slotitems)
		(predicate _:qqadd-args-as-constraints-from)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?itemlist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))

)

(defrule rule-gen15039 (declare (salience 10))
	(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?rest))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://white.gobo/modelA#binds-variable>)
		(object ?clipsrestvar))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variable>)
		(object ?clipsrestvar)))
		(TripleTemplate
		(subject ?rest)
		(predicate <http://example.com/as-expression>)
		(object ?clipsrestvar))
		(Atom
		(op _:qqcombine-multifield-as-list)
		(args ?rest ?multifieldvar ))
		(Member
		(instance ?rest)
		(class <http://www.w3.org/2007/rif#Var>))
		=>
(bind ?function (<http://white.gobo/new-blanknode>))(bind ?expand (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?clipsrestvar)
		(predicate <http://clips.script/var-as-const-expr>)
		(object ?function)))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-name>)
		(object "%3Chttp%3A%2F%2Fwww.w3.org%2F2007%2Frif-builtin-function%23make-list%3E")))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?expand ))))
	(assert 	(TripleTemplate
		(subject ?expand)
		(predicate <http://clips.script/function-name>)
		(object "expand%24")))
	(assert 	(TripleTemplate
		(subject ?expand)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?multifieldvar ))))

)
;autogenerated group rules

(defrule rule-gen15057 (declare (salience -1))
	(Member
		(instance ?riflist)
		(class <http://www.w3.org/2007/rif#List>))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-lhs-pattern>)
		(object ?pattern))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-constraint>)
		(object ?listasvar))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variable>)
		(object ?listasvar)))
	(not(exists (and 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://example.com/needs-variable>)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variable>)
		(object ?x)))
	)))
	(not 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/used-as-pattern-in>)
		(object ?defrule)))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?defrule) (eq ?trpl:predicate <http://clips.script/conditional-element>))
		(bind ?oldpatternlist ?trpl:object))(bind ?assignpattern (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/used-as-pattern-in>)
		(object ?defrule)))
	(assert 	(Member
		(instance ?assignpattern)
		(class <http://clips.script/AssignedPatternCE>)))
	(assert 	(TripleTemplate
		(subject ?assignpattern)
		(predicate <http://clips.script/pattern-ce>)
		(object ?pattern)))
	(assert 	(TripleTemplate
		(subject ?assignpattern)
		(predicate <http://clips.script/fact-var-symbol>)
		(object ?listasvar)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?defrule)
			(eq ?fct:predicate <http://clips.script/conditional-element>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?oldpatternlist ?assignpattern ))))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/transfer-bound-variables-from>)
		(object ?pattern)))

)

(defrule rule-gen15072 (declare (salience -1))
	(Member
		(instance ?riflist)
		(class <http://www.w3.org/2007/rif#List>))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-lhs-pattern>)
		(object ?pattern))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-constraint>)
		(object ?listasvar))
		(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variable>)
		(object ?listasvar))
	(not(exists (and 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://example.com/needs-variable>)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variable>)
		(object ?x)))
	)))
	(not 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/used-as-pattern-in>)
		(object ?defrule)))
		=>
(bind ?tmplistasvar (<http://white.gobo/new-blanknode>))(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?defrule) (eq ?trpl:predicate <http://clips.script/conditional-element>))
		(bind ?oldpatternlist ?trpl:object))(bind ?assignpattern (<http://white.gobo/new-blanknode>))(bind ?testvaraction (<http://white.gobo/new-blanknode>))(bind ?testvarpattern (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?tmplistasvar)
		(class <http://clips.script/Variable>)))
	(assert 	(Member
		(instance ?tmplistasvar)
		(class <http://example.com/Variable>)))
	(assert 	(Member
		(instance ?testvarpattern)
		(class <http://clips.script/TestCE>)))
	(assert 	(TripleTemplate
		(subject ?testvarpattern)
		(predicate <http://clips.script/function-call>)
		(object ?testvaraction)))
	(assert 	(TripleTemplate
		(subject ?testvaraction)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?testvaraction)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?listasvar ?tmplistasvar ))))
	(assert 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/used-as-pattern-in>)
		(object ?defrule)))
	(assert 	(Member
		(instance ?assignpattern)
		(class <http://clips.script/AssignedPatternCE>)))
	(assert 	(TripleTemplate
		(subject ?assignpattern)
		(predicate <http://clips.script/pattern-ce>)
		(object ?pattern)))
	(assert 	(TripleTemplate
		(subject ?assignpattern)
		(predicate <http://clips.script/fact-var-symbol>)
		(object ?tmplistasvar)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?defrule)
			(eq ?fct:predicate <http://clips.script/conditional-element>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?oldpatternlist ?assignpattern ?testvarpattern ))))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/transfer-bound-variables-from>)
		(object ?pattern)))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen15090 (declare (salience 50))
	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?frameobject))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
		(TripleTemplate
		(subject ?slotkey)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object "http%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23type^^http://www.w3.org/2001/XMLSchema#anyURI"))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?slotvalue))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		(TripleTemplate
		(subject ?frameobject)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintsubject))
		(TripleTemplate
		(subject ?slotvalue)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintobject))
	(not(exists (and 	(TripleTemplate
		(subject ?constraintsubject)
		(predicate <http://example.com/needs-variable>)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variable>)
		(object ?x)))
	)))
	(not(exists (and 	(TripleTemplate
		(subject ?constraintobject)
		(predicate <http://example.com/needs-variable>)
		(object ?z))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variable>)
		(object ?z)))
	)))
	(not 	(TripleTemplate
		(subject ?slot)
		(predicate <http://example.com/used-as-pattern-in>)
		(object ?defrule)))
		=>
(bind ?slotinstance (<http://white.gobo/new-blanknode>))(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?defrule) (eq ?trpl:predicate <http://clips.script/conditional-element>))
		(bind ?oldpatternlist ?trpl:object))(bind ?slotcls (<http://white.gobo/new-blanknode>))(bind ?pattern (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?slot)
		(predicate <http://example.com/used-as-pattern-in>)
		(object ?defrule)))
	(assert 	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/used-as-pattern-in>)
		(object ?defrule)))
	(assert 	(Member
		(instance ?pattern)
		(class <http://clips.script/TemplatePatternCE>)))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Member")))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotinstance ?slotcls ))))
	(assert 	(TripleTemplate
		(subject ?slotinstance)
		(predicate <http://clips.script/slot-name>)
		(object "instance")))
	(assert 	(TripleTemplate
		(subject ?slotinstance)
		(predicate <http://clips.script/constraint>)
		(object ?constraintsubject)))
	(assert 	(TripleTemplate
		(subject ?slotcls)
		(predicate <http://clips.script/slot-name>)
		(object "class")))
	(assert 	(TripleTemplate
		(subject ?slotcls)
		(predicate <http://clips.script/constraint>)
		(object ?constraintobject)))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?defrule)
			(eq ?fct:predicate <http://clips.script/conditional-element>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://clips.script/conditional-element>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?oldpatternlist ?pattern ))))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/transfer-bound-variables-from>)
		(object ?constraintsubject)))
	(assert 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/transfer-bound-variables-from>)
		(object ?constraintobject)))

)
;autogenerated group rules

(defrule rule-gen15121 (declare (salience -1))
	(TripleTemplate
		(subject ?rifconstiristring)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object "http%3A%2F%2Fwww.w3.org%2F2007%2Frif-builtin-predicate%23iri-string^^http://www.w3.org/2001/XMLSchema#anyURI"))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifconstiristring))
		(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?rifatom))
		(Member
		(instance ?rifexternal)
		(class <http://www.w3.org/2007/rif#External>))
		(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule))
	(not 	(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://example.com/used-as-pattern-in>)
		(object ?defrule)))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?arglist ))
		(TripleTemplate
		(subject ?targetiri)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?targetiri)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variable>)
		(object ?clipsvar)))
		(TripleTemplate
		(subject ?targetstring)
		(predicate <http://example.com/as-expression>)
		(object ?clipsexpression))
	(test (eq ?targetiri(<http://www.w3.org/2007/rif-builtin-function#get> ?arglist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
	(test (eq ?targetstring(<http://www.w3.org/2007/rif-builtin-function#get> ?arglist "1^^http://www.w3.org/2001/XMLSchema#integer" )))
	(not(exists (and 	(TripleTemplate
		(subject ?clipsexpression)
		(predicate <http://example.com/needs-variable>)
		(object ?x))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variable>)
		(object ?x)))
	)))
	(not(and (exists 	(TripleTemplate
		(subject ?clipsexpression)
		(predicate <http://clips.script/variable-name>)
		(object ?tmp)))
	(not 	(TripleTemplate
		(subject ?defrule)
		(predicate <http://example.com/bound-variable>)
		(object ?clipsexpression)))
	))
		=>
	(assert 	(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://example.com/used-as-pattern-in>)
		(object ?defrule)))
	(assert 	(TripleTemplate
		(subject ?clipsvar)
		(predicate <http://clips.script/var-as-const-expr>)
		(object ?clipsexpression)))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen15154 (declare (salience -101))
	(TripleTemplate
		(subject ?rif)
		(predicate _:qqadd-atom-args-as-constraint)
		(object ?arglist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-greater-than> (<http://www.w3.org/2007/rif-builtin-function#count> ?arglist ) "0^^http://www.w3.org/2001/XMLSchema#integer" ))
		=>
	(assert 	(Member
		(instance ?rif)
		(class <http://example.com/couldnt-add-all-argument>)))
(<http://white.gobo/set-graph-in-errorstate> "Missing%20argument%20for%20expression%28ex%3Acouldnt-add-all-argument%29" )
)

(defrule rule-gen15158 
	(Member
		(instance ?rifatom)
		(class <http://white.gobo/modelA#AtomPatternGenerator>))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?op))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?arglist ))
		(TripleTemplate
		(subject ?op)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintop))
		=>
(bind ?slotargs (<http://white.gobo/new-blanknode>))(bind ?pattern (<http://white.gobo/new-blanknode>))(bind ?slotop (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?pattern)))
	(assert 	(Member
		(instance ?pattern)
		(class <http://clips.script/TemplatePatternCE>)))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Atom")))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotop ?slotargs ))))
	(assert 	(TripleTemplate
		(subject ?slotop)
		(predicate <http://clips.script/slot-name>)
		(object "op")))
	(assert 	(TripleTemplate
		(subject ?slotop)
		(predicate <http://clips.script/constraint>)
		(object ?constraintop)))
	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://clips.script/slot-name>)
		(object "args")))
	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://clips.script/constraints>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate _:qqadd-atom-args-as-constraint)
		(object ?arglist)))

)
;autogenerated group rules

(defrule rule-gen15170 (declare (salience 10))
	(TripleTemplate
		(subject ?slotargs)
		(predicate _:qqadd-atom-args-as-constraint)
		(object ?arglist))
		(TripleTemplate
		(subject ?firstarg)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsexpr))
	(test (eq ?firstarg(<http://www.w3.org/2007/rif-builtin-function#get> ?arglist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?slotargs) (eq ?trpl:predicate <http://clips.script/constraints>))
		(bind ?oldconstraints ?trpl:object))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?slotargs)
			(eq ?fct:predicate _:qqadd-atom-args-as-constraint))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate _:qqadd-atom-args-as-constraint)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?arglist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?slotargs)
			(eq ?fct:predicate <http://clips.script/constraints>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?slotargs)
		(predicate <http://clips.script/constraints>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?oldconstraints ?clipsexpr ))))

)
;autogenerated group rules

(defrule rule-gen15177 
	(Member
		(instance ?rifmember)
		(class <http://white.gobo/modelA#MemberPatternGenerator>))
		(TripleTemplate
		(subject ?rifmember)
		(predicate <http://www.w3.org/2007/rif#class>)
		(object ?rifclass))
		(TripleTemplate
		(subject ?rifmember)
		(predicate <http://www.w3.org/2007/rif#instance>)
		(object ?rifinstance))
		(TripleTemplate
		(subject ?rifclass)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintclass))
		(TripleTemplate
		(subject ?rifinstance)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintinstance))
	(not(exists 	(TripleTemplate
		(subject ?rifmember)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?x))))
		=>
(bind ?slotinstance (<http://white.gobo/new-blanknode>))(bind ?pattern (<http://white.gobo/new-blanknode>))(bind ?slotclass (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifmember)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?pattern)))
	(assert 	(Member
		(instance ?pattern)
		(class <http://clips.script/TemplatePatternCE>)))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Member")))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotclass ?slotinstance ))))
	(assert 	(TripleTemplate
		(subject ?slotclass)
		(predicate <http://clips.script/slot-name>)
		(object "class")))
	(assert 	(TripleTemplate
		(subject ?slotclass)
		(predicate <http://clips.script/constraint>)
		(object ?constraintclass)))
	(assert 	(TripleTemplate
		(subject ?slotinstance)
		(predicate <http://clips.script/slot-name>)
		(object "instance")))
	(assert 	(TripleTemplate
		(subject ?slotinstance)
		(predicate <http://clips.script/constraint>)
		(object ?constraintinstance)))

)
;autogenerated group rules

(defrule rule-gen15195 
	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(Member
		(instance ?slot)
		(class <http://white.gobo/modelA#TripleTemplateGenerator>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?frameobject))
		(TripleTemplate
		(subject ?frameobject)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintsubj))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
		(TripleTemplate
		(subject ?slotkey)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintpred))
	(not 	(TripleTemplate
		(subject ?slotkey)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object "http%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23type^^http://www.w3.org/2001/XMLSchema#anyURI")))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?slotvalue))
		(TripleTemplate
		(subject ?slotvalue)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintobj))
	(not(exists 	(TripleTemplate
		(subject ?slot)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?x))))
		=>
(bind ?pattern (<http://white.gobo/new-blanknode>))(bind ?slotsubj (<http://white.gobo/new-blanknode>))(bind ?slotobj (<http://white.gobo/new-blanknode>))(bind ?slotpred (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?slot)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?pattern)))
	(assert 	(Member
		(instance ?pattern)
		(class <http://clips.script/TemplatePatternCE>)))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "TripleTemplate")))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsubj ?slotpred ?slotobj ))))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/slot-name>)
		(object "subject")))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/constraint>)
		(object ?constraintsubj)))
	(assert 	(TripleTemplate
		(subject ?slotpred)
		(predicate <http://clips.script/slot-name>)
		(object "predicate")))
	(assert 	(TripleTemplate
		(subject ?slotpred)
		(predicate <http://clips.script/constraint>)
		(object ?constraintpred)))
	(assert 	(TripleTemplate
		(subject ?slotobj)
		(predicate <http://clips.script/slot-name>)
		(object "object")))
	(assert 	(TripleTemplate
		(subject ?slotobj)
		(predicate <http://clips.script/constraint>)
		(object ?constraintobj)))

)

(defrule rule-gen15222 
	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(Member
		(instance ?slot)
		(class <http://white.gobo/modelA#TripleTemplateGenerator>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?frameobject))
		(TripleTemplate
		(subject ?frameobject)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintsubj))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
		(TripleTemplate
		(subject ?slotkey)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object "http%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23type^^http://www.w3.org/2001/XMLSchema#anyURI"))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?slotvalue))
		(TripleTemplate
		(subject ?slotvalue)
		(predicate <http://example.com/as-constraint>)
		(object ?constraintobj))
	(not(exists 	(TripleTemplate
		(subject ?slot)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?x))))
		=>
(bind ?pattern (<http://white.gobo/new-blanknode>))(bind ?slotinstance (<http://white.gobo/new-blanknode>))(bind ?slotclass (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?slot)
		(predicate <http://white.gobo/modelA#as-lhs-pattern>)
		(object ?pattern)))
	(assert 	(Member
		(instance ?pattern)
		(class <http://clips.script/TemplatePatternCE>)))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Member")))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotinstance ?slotclass ))))
	(assert 	(TripleTemplate
		(subject ?slotinstance)
		(predicate <http://clips.script/slot-name>)
		(object "instance")))
	(assert 	(TripleTemplate
		(subject ?slotinstance)
		(predicate <http://clips.script/constraint>)
		(object ?constraintsubj)))
	(assert 	(TripleTemplate
		(subject ?slotclass)
		(predicate <http://clips.script/slot-name>)
		(object "class")))
	(assert 	(TripleTemplate
		(subject ?slotclass)
		(predicate <http://clips.script/constraint>)
		(object ?constraintobj)))

)
;autogenerated group rules

(defrule rule-gen15249 (declare (salience 1000))
	(TripleTemplate
		(subject ?directive)
		(predicate <http://www.w3.org/2007/rif#location>)
		(object ?location))
		(TripleTemplate
		(subject ?directive)
		(predicate <http://www.w3.org/2007/rif#profile>)
		(object ?profile))
		=>
(<http://white.gobo/import> ?location ?profile )
)

(defrule rule-gen15256 (declare (salience 1000))
	(TripleTemplate
		(subject ?directive)
		(predicate <http://www.w3.org/2007/rif#location>)
		(object ?location))
	(not(exists 	(TripleTemplate
		(subject ?directive)
		(predicate <http://www.w3.org/2007/rif#profile>)
		(object ?profile))))
		=>
	(assert 	(TripleTemplate
		(subject ?directive)
		(predicate <http://www.w3.org/2007/rif#profile>)
		(object <http://www.w3.org/ns/entailment/RIF>)))

)

