;mydescription

;autogenerated group rules
;autogenerated group rules

(defrule rule-gen12261 
(or 	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#if>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#payload>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?child))
	)
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child)))

)

(defrule rule-gen12289 
	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?childkey))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?childvalue))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?childkey)))
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?childvalue)))

)

(defrule rule-gen12299 
(or 	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#actions>)
		(object ?childlist))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?childlist ))
	(or 	(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Group>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Atom>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Assert>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Retract>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Do>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Modify>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Subclass>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Equal>))
		(TripleTemplate
		(subject ?child)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Member>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?childlist ?child ))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child)))

)

(defrule rule-gen12342 
	(TripleTemplate
		(subject ?rifdo)
		(predicate <http://www.w3.org/2007/rif#actionVar>)
		(object ?actionvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?actionvar ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifvar ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifframe ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifframe)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifdo)))

)

(defrule rule-gen12352 
	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child))
		(TripleTemplate
		(subject ?child)
		(predicate <http://example.com/inherits-data>)
		(object ?grandchild))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?grandchild)))

)
;autogenerated group rules

(defrule rule-gen12359 
	(TripleTemplate
		(subject ?rifdo)
		(predicate <http://www.w3.org/2007/rif#actionVar>)
		(object ?actionvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?actionvar ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifvar ))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifdo)))

)

(defrule rule-gen12366 
	(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#vars>)
		(object ?varlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?varlist ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?varlist ?rifvar ))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifforall)))

)

(defrule rule-gen12373 
	(TripleTemplate
		(subject ?varparent)
		(predicate <http://example.com/inherits-data>)
		(object ?varchild))
		(TripleTemplate
		(subject ?varparent)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?varchild)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?varparent)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar))
		=>
	(assert 	(TripleTemplate
		(subject ?varchild)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar)))
	(assert 	(TripleTemplate
		(subject ?varchild)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsvar)))

)
;autogenerated group rules

(defrule rule-gen12386 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#value>)
		(object ?value))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/string>)
		(object (<http://white.gobo/literal-to-clipsconstant> ?value ))))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen12390 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object ?iristring))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/symbol>)
		(object (<http://white.gobo/iri-to-clipsconstant> ?iristring ))))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)
;autogenerated group rules

(defrule rule-gen12394 
	(TripleTemplate
		(subject ?factvar)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/Variable>))
		(Atom
		(op <http://example.com/currentfactindex>)
		(args ?factindex ))
	(not(exists 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object ?factname))))
		=>
	(do-for-all-facts ((?fct Atom)) (and (eq ?fct:op <http://example.com/currentfactindex>) (eq ?fct:args (eq ?fct:args (create$  ?factindex))))
		(retract ?fct))	(assert 	(Atom
		(op <http://example.com/currentfactindex>)
		(args (<http://www.w3.org/2007/rif-builtin-function#numeric-add> ?factindex "1^^http://www.w3.org/2001/XMLSchema#integer" ) )))
	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object (<http://www.w3.org/2007/rif-builtin-function#concat> "fct" ?factindex ))))

)

(defrule rule-gen12403 
	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifop))
		(TripleTemplate
		(subject ?rifop)
		(predicate <http://example.com/as-expression>)
		(object ?op))
	(not(exists 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))))
		=>
(bind ?funccheckargs (<http://white.gobo/new-blanknode>))(bind ?generateargscompare (<http://white.gobo/new-blanknode>))(bind ?funccheckop (<http://white.gobo/new-blanknode>))(bind ?varargs (<http://white.gobo/new-blanknode>))(bind ?varop (<http://white.gobo/new-blanknode>))(bind ?factvar (<http://white.gobo/new-blanknode>))(bind ?clipsdeftemplate (<http://white.gobo/new-blanknode>))(bind ?anyfactp (<http://white.gobo/new-blanknode>))(bind ?query (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://example.com/as-test-action>)
		(object ?anyfactp)))
	(assert 	(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Atom")))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?varop)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?varop)
		(predicate <http://clips.script/member-slot-name>)
		(object "op")))
	(assert 	(TripleTemplate
		(subject ?varargs)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?varargs)
		(predicate <http://clips.script/member-slot-name>)
		(object "args")))
	(assert 	(TripleTemplate
		(subject ?funccheckop)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheckop)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?varop ?op ))))
	(assert 	(TripleTemplate
		(subject ?funccheckargs)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheckargs)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?varargs ?generateargscompare ))))
	(assert 	(TripleTemplate
		(subject ?generateargscompare)
		(predicate <http://clips.script/function-name>)
		(object "create%24")))
	(assert 	(TripleTemplate
		(subject ?generateargscompare)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/AnyFactP>)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/query>)
		(object ?query)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-name>)
		(object "and")))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?funccheckop ?funccheckargs ))))

)

(defrule rule-gen12413 
	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifop))
		(TripleTemplate
		(subject ?rifop)
		(predicate <http://example.com/as-expression>)
		(object ?op))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
		=>
(bind ?varargs (<http://white.gobo/new-blanknode>))(bind ?funccheckop (<http://white.gobo/new-blanknode>))(bind ?factvar (<http://white.gobo/new-blanknode>))(bind ?generateargscompare (<http://white.gobo/new-blanknode>))(bind ?varop (<http://white.gobo/new-blanknode>))(bind ?clipsdeftemplate (<http://white.gobo/new-blanknode>))(bind ?funccheckargs (<http://white.gobo/new-blanknode>))(bind ?query (<http://white.gobo/new-blanknode>))(bind ?anyfactp (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://example.com/as-test-action>)
		(object ?anyfactp)))
	(assert 	(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Atom")))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?varop)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?varop)
		(predicate <http://clips.script/member-slot-name>)
		(object "op")))
	(assert 	(TripleTemplate
		(subject ?varargs)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?varargs)
		(predicate <http://clips.script/member-slot-name>)
		(object "args")))
	(assert 	(TripleTemplate
		(subject ?funccheckop)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheckop)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?varop ?op ))))
	(assert 	(TripleTemplate
		(subject ?funccheckargs)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheckargs)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?varargs ?generateargscompare ))))
	(assert 	(TripleTemplate
		(subject ?generateargscompare)
		(predicate <http://clips.script/function-name>)
		(object "create%24")))
	(assert 	(TripleTemplate
		(subject ?generateargscompare)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?generateargscompare)
		(predicate <http://example.com/add-expressions-as-args>)
		(object ?arglist)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/AnyFactP>)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/query>)
		(object ?query)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-name>)
		(object "and")))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?funccheckop ?funccheckargs ))))

)

(defrule rule-gen12423 
	(TripleTemplate
		(subject ?clipsfunction)
		(predicate <http://example.com/add-expressions-as-args>)
		(object ?rifrestargs))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rifrestargs ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-not-equal> "0^^http://www.w3.org/2001/XMLSchema#integer" (<http://www.w3.org/2007/rif-builtin-function#count> ?rifrestargs ) ))
		(TripleTemplate
		(subject ?firstaction)
		(predicate <http://example.com/as-expression>)
		(object ?nextarg))
	(test (eq ?firstaction(<http://www.w3.org/2007/rif-builtin-function#get> ?rifrestargs "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?clipsfunction) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?currentargs ?trpl:object))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?clipsfunction)
			(eq ?fct:predicate <http://example.com/add-expressions-as-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?clipsfunction)
		(predicate <http://example.com/add-expressions-as-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?rifrestargs "0^^http://www.w3.org/2001/XMLSchema#integer" ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?clipsfunction)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?clipsfunction)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?currentargs ?nextarg ))))

)

(defrule rule-gen12430 
	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktriplesubject>)
		(object ?rifsubject))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/triplevariable>)
		(object ?factvar))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/addchecktoquery>)
		(object ?query))
		(TripleTemplate
		(subject ?rifsubject)
		(predicate <http://example.com/as-expression>)
		(object ?subj))
		=>
(bind ?funccheck (<http://white.gobo/new-blanknode>))(bind ?slotsubj (<http://white.gobo/new-blanknode>))(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?query) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?querylist ?trpl:object))	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-slot-name>)
		(object "subject")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsubj ?subj ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?query)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?querylist ?funccheck ))))
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?checktriple) (and (eq ?fct:predicate <http://example.com/checktriplesubject>)(eq ?fct:object ?rifsubject)))
		(retract ?fct))
)

(defrule rule-gen12443 
	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktriplepredicate>)
		(object ?rifpredicate))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/triplevariable>)
		(object ?factvar))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/addchecktoquery>)
		(object ?query))
		(TripleTemplate
		(subject ?rifpredicate)
		(predicate <http://example.com/as-expression>)
		(object ?pred))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?query) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?querylist ?trpl:object))(bind ?slotpred (<http://white.gobo/new-blanknode>))(bind ?funccheck (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?slotpred)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotpred)
		(predicate <http://clips.script/member-slot-name>)
		(object "predicate")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotpred ?pred ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?query)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?querylist ?funccheck ))))
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?checktriple) (and (eq ?fct:predicate <http://example.com/checktriplesubject>)(eq ?fct:object ?rifpredicate)))
		(retract ?fct))
)

(defrule rule-gen12456 
	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktripleobject>)
		(object ?rifobject))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/triplevariable>)
		(object ?factvar))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/addchecktoquery>)
		(object ?query))
		(TripleTemplate
		(subject ?rifobject)
		(predicate <http://example.com/as-expression>)
		(object ?obj))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?query) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?querylist ?trpl:object))(bind ?funccheck (<http://white.gobo/new-blanknode>))(bind ?slotobj (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?slotobj)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotobj)
		(predicate <http://clips.script/member-slot-name>)
		(object "object")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotobj ?obj ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?query)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?querylist ?funccheck ))))
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?checktriple) (and (eq ?fct:predicate <http://example.com/checktriplesubject>)(eq ?fct:object ?rifobject)))
		(retract ?fct))
)

(defrule rule-gen12469 
	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?object))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(TripleTemplate
		(subject ?object)
		(predicate <http://example.com/as-expression>)
		(object ?subj))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
		(TripleTemplate
		(subject ?slotkey)
		(predicate <http://example.com/as-expression>)
		(object ?pred))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?slotvalue))
		(TripleTemplate
		(subject ?slotvalue)
		(predicate <http://example.com/as-expression>)
		(object ?obj))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
(bind ?query (<http://white.gobo/new-blanknode>))(bind ?anyfactp (<http://white.gobo/new-blanknode>))(bind ?factvar (<http://white.gobo/new-blanknode>))(bind ?slotobj (<http://white.gobo/new-blanknode>))(bind ?checktriple (<http://white.gobo/new-blanknode>))(bind ?slotsubj (<http://white.gobo/new-blanknode>))(bind ?slotpred (<http://white.gobo/new-blanknode>))(bind ?clipsdeftemplate (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/as-test-action>)
		(object ?anyfactp)))
	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/deftemplate-name>)
		(object "TripleTemplate")))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/AnyFactP>)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/query>)
		(object ?query)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-name>)
		(object "and")))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktriplesubject>)
		(object ?object)))
	(assert 	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktriplepredicate>)
		(object ?slotkey)))
	(assert 	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktripleobject>)
		(object ?slotvalue)))
	(assert 	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/triplevariable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/addchecktoquery>)
		(object ?query)))

)

(defrule rule-gen12491 
	(TripleTemplate
		(subject ?rifexists)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Exists>))
		(TripleTemplate
		(subject ?rifexists)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?hastestaction))
		(TripleTemplate
		(subject ?hastestaction)
		(predicate <http://example.com/as-test-action>)
		(object ?testaction))
		=>
	(assert 	(TripleTemplate
		(subject ?rifexists)
		(predicate <http://example.com/as-test-action>)
		(object ?testaction)))

)
(deffacts rule-gen12501
		(Atom
		(op <http://example.com/currentfactindex>)
		(args "1^^http://www.w3.org/2001/XMLSchema#integer" )))

;autogenerated group rules

(defrule rule-gen12502 
(or 	(TripleTemplate
		(subject ?rootformula)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Frame>))
		(TripleTemplate
		(subject ?rootformula)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Atom>))
		(TripleTemplate
		(subject ?rootformula)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://www.w3.org/2007/rif#Exists>))
	)
	(not(exists (or 	(TripleTemplate
		(subject ?deeperroot)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?rootformula))
	)))
		=>
	(assert 	(TripleTemplate
		(subject ?rootformula)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://example.com/rootformula>)))

)

(defrule rule-gen12515 
	(TripleTemplate
		(subject ?rootformula)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://example.com/rootformula>))
		(TripleTemplate
		(subject ?rootformula)
		(predicate <http://example.com/as-test-action>)
		(object ?anyfactp))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject <http://example.com/rootfunction>) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?rootfunctionargs ?trpl:object))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject <http://example.com/rootfunction>)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?rootfunctionargs ?anyfactp ))))

)
(deffacts rule-gen12522
		(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/function-name>)
		(object "and")))

(deffacts rule-gen12523
		(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> <http://example.com/basetrue> ))))

(deffacts rule-gen12524
		(TripleTemplate
		(subject <http://example.com/basetrue>)
		(predicate <http://clips.script/symbol>)
		(object "TRUE")))

;autogenerated group rules

(defrule rule-gen12525 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate ?prop)
		(object <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil>))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate ?prop)(eq ?fct:object <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil>)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?base)
		(predicate ?prop)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))

)

(defrule rule-gen12529 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object ?list))
	(not(exists 	(TripleTemplate
		(subject ?s)
		(predicate ?p)
		(object ?base))))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://example.com/triples-to-rdf#as-list>)(eq ?fct:object ?list)))
		(retract ?fct))
)

(defrule rule-gen12536 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>)
		(object ?rest))
		(TripleTemplate
		(subject ?base)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#first>)
		(object ?first))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rest ))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>)(eq ?fct:object ?rest)))
		(retract ?fct))	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#first>)(eq ?fct:object ?first)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?base)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object (<http://www.w3.org/2007/rif-builtin-function#insert-before> ?rest "0^^http://www.w3.org/2001/XMLSchema#integer" ?first ))))

)

(defrule rule-gen12543 (declare (salience 100))
	(TripleTemplate
		(subject ?subject)
		(predicate ?prop)
		(object ?listbase))
		(TripleTemplate
		(subject ?listbase)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object ?aslist))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?subject) (and (eq ?fct:predicate ?prop)(eq ?fct:object ?listbase)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?subject)
		(predicate ?prop)
		(object ?aslist)))

)
