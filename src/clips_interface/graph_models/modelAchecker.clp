;mydescription

;autogenerated group rules
;autogenerated group rules

(defrule rule-gen1142 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)
;autogenerated group rules

(defrule rule-gen1146 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#value>)
		(object ?value))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/string>)
		(object (<http://white.gobo/literal-to-clipsconstant> ?value ))))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen1150 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object ?iristring))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/symbol>)
		(object (<http://white.gobo/iri-to-clipsconstant> ?iristring ))))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)
;autogenerated group rules

(defrule rule-gen1154 
	(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/query>)
		(object ?query))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?object))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(TripleTemplate
		(subject ?object)
		(predicate <http://example.com/as-expression>)
		(object ?subj))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
		(TripleTemplate
		(subject ?slotkey)
		(predicate <http://example.com/as-expression>)
		(object ?pred))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?slotvalue))
		(TripleTemplate
		(subject ?slotvalue)
		(predicate <http://example.com/as-expression>)
		(object ?obj))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		(Atom
		(op <http://example.com/always-false>)
		(args ))
		=>
(bind ?funcchecksubj (<http://white.gobo/new-blanknode>))(bind ?slotobj (<http://white.gobo/new-blanknode>))(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?query) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?querylist ?trpl:object))(bind ?factvar (<http://white.gobo/new-blanknode>))(bind ?funccheckobj (<http://white.gobo/new-blanknode>))(bind ?slotpred (<http://white.gobo/new-blanknode>))(bind ?funccheckpred (<http://white.gobo/new-blanknode>))(bind ?slotsubj (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object "fct")))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-slot-name>)
		(object "subject")))
	(assert 	(TripleTemplate
		(subject ?slotpred)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotpred)
		(predicate <http://clips.script/member-slot-name>)
		(object "predicate")))
	(assert 	(TripleTemplate
		(subject ?slotobj)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotobj)
		(predicate <http://clips.script/member-slot-name>)
		(object "object")))
	(assert 	(TripleTemplate
		(subject ?funcchecksubj)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funcchecksubj)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsubj ?subj ))))
	(assert 	(TripleTemplate
		(subject ?funccheckpred)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheckpred)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotpred ?pred ))))
	(assert 	(TripleTemplate
		(subject ?funccheckobj)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheckobj)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotobj ?obj ))))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?querylist ?funcchecksubj ?funccheckpred ?funccheckobj ))))

)
(deffacts rule-gen1180
		(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/FunctionDeclaration>)))

(deffacts rule-gen1181
		(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
		(object <http://clips.script/AnyFactP>)))

(deffacts rule-gen1182
		(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/fact-set-template>)
		(object <http://example.com/asdf>)))

(deffacts rule-gen1183
		(TripleTemplate
		(subject <http://example.com/asdf>)
		(predicate <http://clips.script/deftemplate-name>)
		(object "TripleTemplate")))

(deffacts rule-gen1184
		(TripleTemplate
		(subject <http://example.com/asdf>)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object <http://example.com/qqfactvariable>)))

(deffacts rule-gen1185
		(TripleTemplate
		(subject <http://example.com/qqfactvariable>)
		(predicate <http://clips.script/variable-name>)
		(object "fct")))

(deffacts rule-gen1186
		(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/query>)
		(object <http://example.com/qqfactquery>)))

(deffacts rule-gen1187
		(TripleTemplate
		(subject <http://example.com/qqfactquery>)
		(predicate <http://clips.script/function-name>)
		(object "and")))

(deffacts rule-gen1188
		(TripleTemplate
		(subject <http://example.com/qqfactquery>)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> <http://example.com/qqfactvariable> <http://example.com/qqfactvariable> ))))

;autogenerated group rules

(defrule rule-gen1189 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate ?prop)
		(object <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil>))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate ?prop)(eq ?fct:object <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil>)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?base)
		(predicate ?prop)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))

)

(defrule rule-gen1193 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object ?list))
	(not(exists 	(TripleTemplate
		(subject ?s)
		(predicate ?p)
		(object ?base))))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://example.com/triples-to-rdf#as-list>)(eq ?fct:object ?list)))
		(retract ?fct))
)

(defrule rule-gen1200 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>)
		(object ?rest))
		(TripleTemplate
		(subject ?base)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#first>)
		(object ?first))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rest ))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>)(eq ?fct:object ?rest)))
		(retract ?fct))	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#first>)(eq ?fct:object ?first)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?base)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object (<http://www.w3.org/2007/rif-builtin-function#insert-before> ?rest "0^^http://www.w3.org/2001/XMLSchema#integer" ?first ))))

)

(defrule rule-gen1207 (declare (salience 100))
	(TripleTemplate
		(subject ?subject)
		(predicate ?prop)
		(object ?listbase))
		(TripleTemplate
		(subject ?listbase)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object ?aslist))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?subject) (and (eq ?fct:predicate ?prop)(eq ?fct:object ?listbase)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?subject)
		(predicate ?prop)
		(object ?aslist)))

)
