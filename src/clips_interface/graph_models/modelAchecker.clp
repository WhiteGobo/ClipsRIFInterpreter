;mydescription

;autogenerated group rules

(defrule rule-gen4191 
(or 	(Member
		(instance ?rootformula)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?rootformula)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?rootformula)
		(class <http://www.w3.org/2007/rif#Exists>))
		(Member
		(instance ?rootformula)
		(class <http://www.w3.org/2007/rif#Member>))
		(Member
		(instance ?rootformula)
		(class <http://www.w3.org/2007/rif#Subclass>))
	)
	(not(exists (or 	(TripleTemplate
		(subject ?deeperroot)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?rootformula))
	)))
		=>
	(assert 	(Member
		(instance ?rootformula)
		(class <http://example.com/rootformula>)))

)

(defrule rule-gen4205 
	(Member
		(instance ?rootformula)
		(class <http://example.com/rootformula>))
		(TripleTemplate
		(subject ?rootformula)
		(predicate <http://example.com/as-test-action>)
		(object ?anyfactp))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject <http://example.com/rootfunction>) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?rootfunctionargs ?trpl:object))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject <http://example.com/rootfunction>)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?rootfunctionargs ?anyfactp ))))

)
(deffacts rule-gen4211
		(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/function-name>)
		(object "and")))

(deffacts rule-gen4212
		(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> <http://example.com/basetrue> ))))

(deffacts rule-gen4213
		(TripleTemplate
		(subject <http://example.com/basetrue>)
		(predicate <http://clips.script/symbol>)
		(object "TRUE")))

;autogenerated group rules

(defrule rule-gen4214 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate ?prop)
		(object <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil>))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate ?prop)(eq ?fct:object <http://www.w3.org/1999/02/22-rdf-syntax-ns#nil>)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?base)
		(predicate ?prop)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list>))))

)

(defrule rule-gen4218 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object ?list))
	(not(exists 	(TripleTemplate
		(subject ?s)
		(predicate ?p)
		(object ?base))))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://example.com/triples-to-rdf#as-list>)(eq ?fct:object ?list)))
		(retract ?fct))
)

(defrule rule-gen4225 (declare (salience 100))
	(TripleTemplate
		(subject ?base)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>)
		(object ?rest))
		(TripleTemplate
		(subject ?base)
		(predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#first>)
		(object ?first))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rest ))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#rest>)(eq ?fct:object ?rest)))
		(retract ?fct))	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?base) (and (eq ?fct:predicate <http://www.w3.org/1999/02/22-rdf-syntax-ns#first>)(eq ?fct:object ?first)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?base)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object (<http://www.w3.org/2007/rif-builtin-function#insert-before> ?rest "0^^http://www.w3.org/2001/XMLSchema#integer" ?first ))))

)

(defrule rule-gen4232 (declare (salience 100))
	(TripleTemplate
		(subject ?subject)
		(predicate ?prop)
		(object ?listbase))
		(TripleTemplate
		(subject ?listbase)
		(predicate <http://example.com/triples-to-rdf#as-list>)
		(object ?aslist))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?subject) (and (eq ?fct:predicate ?prop)(eq ?fct:object ?listbase)))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?subject)
		(predicate ?prop)
		(object ?aslist)))

)
;autogenerated group rules

(defrule rule-gen4239 
	(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?rest))
	(not	(Member
		(instance ?rest)
		(class <http://www.w3.org/2007/rif#Variable>)))
		=>
(<http://white.gobo/set-graph-in-errorstate> "rif%3Arest%20is%20only%20implemented%20for%20domain%20of%20type%20rif%3AVariable" )
)

(defrule rule-gen4245 
	(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?itemlist ))
	(not(exists 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?rest))))
		=>
(bind ?function (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-expression>)
		(object ?function)))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-name>)
		(object "%3Chttp%3A%2F%2Fwww.w3.org%2F2007%2Frif-builtin-function%23make-list%3E")))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate _:qqadd-args-as-expression-from)
		(object ?itemlist)))

)
;autogenerated group rules

(defrule rule-gen4252 
	(TripleTemplate
		(subject ?function)
		(predicate _:qqadd-args-as-expression-from)
		(object ?itemlist))
		(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object ?currentexprlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-greater-than> (<http://www.w3.org/2007/rif-builtin-function#count> ?itemlist ) "0^^http://www.w3.org/2001/XMLSchema#integer" ))
		(TripleTemplate
		(subject ?firstarg)
		(predicate <http://example.com/as-expression>)
		(object ?firstasexpression))
	(test (eq ?firstarg(<http://www.w3.org/2007/rif-builtin-function#get> ?itemlist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?function)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?currentexprlist ?firstasexpression ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?function)
			(eq ?fct:predicate _:qqadd-args-as-expression-from))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?function)
		(predicate _:qqadd-args-as-expression-from)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?itemlist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))

)

(defrule rule-gen4262 
	(TripleTemplate
		(subject ?function)
		(predicate _:qqadd-args-as-expression-from)
		(object ?itemlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?itemlist ))
	(test (eq "0^^http://www.w3.org/2001/XMLSchema#integer"(<http://www.w3.org/2007/rif-builtin-function#count> ?itemlist )))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?function) (and (eq ?fct:predicate _:qqadd-args-as-expression-from)(eq ?fct:object ?itemlist)))
		(retract ?fct))
)

(defrule rule-gen4266 
	(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?itemlist))
		(Member
		(instance ?riflist)
		(class <http://example.com/ConstraintGenerator>))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://example.com/inherits-data>)
		(object ?riflist))
		(TripleTemplate
		(subject ?rifrule)
		(predicate <http://example.com/as-defrule>)
		(object ?defrule))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?itemlist ))
		(TripleTemplate
		(subject ?riflist)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?rest))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rest ))
		=>
(bind ?listasvar (<http://white.gobo/new-blanknode>))(bind ?slotitems (<http://white.gobo/new-blanknode>))(bind ?pattern (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/as-constraint>)
		(object ?listasvar)))
	(assert 	(TripleTemplate
		(subject ?riflist)
		(predicate <http://example.com/add-as-pattern>)
		(object ?defrule)))
	(assert 	(Member
		(instance ?riflist)
		(class <http://example.com/ConstraintGenerator>)))
	(assert 	(Member
		(instance ?listasvar)
		(class <http://clips.script/Variable>)))
	(assert 	(Member
		(instance ?pattern)
		(class <http://clips.script/TemplatePatternCE>)))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/deftemplate-name>)
		(object "AtomList")))
	(assert 	(TripleTemplate
		(subject ?pattern)
		(predicate <http://clips.script/slot>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotitems ))))
	(assert 	(TripleTemplate
		(subject ?slotitems)
		(predicate <http://clips.script/slot-name>)
		(object "items")))
	(assert 	(TripleTemplate
		(subject ?slotitems)
		(predicate <http://clips.script/constraints>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?slotitems)
		(predicate _:qqadd-args-as-constraints-from)
		(object ?itemlist)))
	(assert 	(TripleTemplate
		(subject ?slotitems)
		(predicate _:qqrest)
		(object ?rest)))

)

(defrule rule-gen4281 
	(TripleTemplate
		(subject ?slotitems)
		(predicate _:qqadd-args-as-constraints-from)
		(object ?itemlist))
		(TripleTemplate
		(subject ?slotitems)
		(predicate <http://clips.script/constraints>)
		(object ?listconstraints))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?itemlist ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-greater-than> (<http://www.w3.org/2007/rif-builtin-function#count> ?itemlist ) "0^^http://www.w3.org/2001/XMLSchema#integer" ))
		(TripleTemplate
		(subject ?firstarg)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsconstraint))
	(test (eq ?firstarg(<http://www.w3.org/2007/rif-builtin-function#get> ?itemlist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?slotitems)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?slotitems)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?listconstraints ?clipsconstraint ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?slotitems)
			(eq ?fct:predicate _:qqadd-args-as-constraints-from))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?slotitems)
		(predicate _:qqadd-args-as-constraints-from)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?itemlist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))

)

(defrule rule-gen4291 
	(TripleTemplate
		(subject ?slotitems)
		(predicate _:qqadd-args-as-constraints-from)
		(object ?itemlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?itemlist ))
	(test (eq "0^^http://www.w3.org/2001/XMLSchema#integer"(<http://www.w3.org/2007/rif-builtin-function#count> ?itemlist )))
		(TripleTemplate
		(subject ?slotitems)
		(predicate _:qqrest)
		(object ?rest))
		(Member
		(instance ?rest)
		(class <http://www.w3.org/2007/rif#Variable>))
		=>
(bind ?tmp (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?tmp)
		(class <http://clips.script/MultifieldVariable>)))
	(assert 	(Member
		(instance ?tmp)
		(class <http://example.com/Unknown-Variable>)))

)
;autogenerated group rules

(defrule rule-gen4300 
	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifop))
		(TripleTemplate
		(subject ?rifop)
		(predicate <http://example.com/as-expression>)
		(object ?op))
	(not(exists 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))))
		=>
(bind ?anyfactp (<http://white.gobo/new-blanknode>))(bind ?generateargscompare (<http://white.gobo/new-blanknode>))(bind ?varop (<http://white.gobo/new-blanknode>))(bind ?varargs (<http://white.gobo/new-blanknode>))(bind ?query (<http://white.gobo/new-blanknode>))(bind ?clipsdeftemplate (<http://white.gobo/new-blanknode>))(bind ?funccheckargs (<http://white.gobo/new-blanknode>))(bind ?funccheckop (<http://white.gobo/new-blanknode>))(bind ?factvar (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://example.com/as-test-action>)
		(object ?anyfactp)))
	(assert 	(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Atom")))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object ?factvar)))
	(assert 	(Member
		(instance ?factvar)
		(class <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://example.com/as-expression>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?varop)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?varop)
		(predicate <http://clips.script/member-slot-name>)
		(object "op")))
	(assert 	(TripleTemplate
		(subject ?varargs)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?varargs)
		(predicate <http://clips.script/member-slot-name>)
		(object "args")))
	(assert 	(TripleTemplate
		(subject ?funccheckop)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheckop)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?varop ?op ))))
	(assert 	(TripleTemplate
		(subject ?funccheckargs)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheckargs)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?varargs ?generateargscompare ))))
	(assert 	(TripleTemplate
		(subject ?generateargscompare)
		(predicate <http://clips.script/function-name>)
		(object "create%24")))
	(assert 	(TripleTemplate
		(subject ?generateargscompare)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(Member
		(instance ?anyfactp)
		(class <http://clips.script/AnyFactP>)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/query>)
		(object ?query)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-name>)
		(object "and")))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?funccheckop ?funccheckargs ))))

)

(defrule rule-gen4310 
	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifop))
		(TripleTemplate
		(subject ?rifop)
		(predicate <http://example.com/as-expression>)
		(object ?op))
		(TripleTemplate
		(subject ?rifatom)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?arglist))
		=>
(bind ?generateargscompare (<http://white.gobo/new-blanknode>))(bind ?funccheckop (<http://white.gobo/new-blanknode>))(bind ?varargs (<http://white.gobo/new-blanknode>))(bind ?varop (<http://white.gobo/new-blanknode>))(bind ?anyfactp (<http://white.gobo/new-blanknode>))(bind ?clipsdeftemplate (<http://white.gobo/new-blanknode>))(bind ?funccheckargs (<http://white.gobo/new-blanknode>))(bind ?factvar (<http://white.gobo/new-blanknode>))(bind ?query (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://example.com/as-test-action>)
		(object ?anyfactp)))
	(assert 	(TripleTemplate
		(subject <http://example.com/rootfunction>)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Atom")))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object ?factvar)))
	(assert 	(Member
		(instance ?factvar)
		(class <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?rifatom)
		(predicate <http://example.com/as-expression>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?varop)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?varop)
		(predicate <http://clips.script/member-slot-name>)
		(object "op")))
	(assert 	(TripleTemplate
		(subject ?varargs)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?varargs)
		(predicate <http://clips.script/member-slot-name>)
		(object "args")))
	(assert 	(TripleTemplate
		(subject ?funccheckop)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheckop)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?varop ?op ))))
	(assert 	(TripleTemplate
		(subject ?funccheckargs)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheckargs)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?varargs ?generateargscompare ))))
	(assert 	(TripleTemplate
		(subject ?generateargscompare)
		(predicate <http://clips.script/function-name>)
		(object "create%24")))
	(assert 	(TripleTemplate
		(subject ?generateargscompare)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?generateargscompare)
		(predicate <http://example.com/add-expressions-as-args>)
		(object ?arglist)))
	(assert 	(Member
		(instance ?anyfactp)
		(class <http://clips.script/AnyFactP>)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/query>)
		(object ?query)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-name>)
		(object "and")))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?funccheckop ?funccheckargs ))))

)

(defrule rule-gen4320 
	(TripleTemplate
		(subject ?clipsfunction)
		(predicate <http://example.com/add-expressions-as-args>)
		(object ?rifrestargs))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rifrestargs ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-not-equal> "0^^http://www.w3.org/2001/XMLSchema#integer" (<http://www.w3.org/2007/rif-builtin-function#count> ?rifrestargs ) ))
		(TripleTemplate
		(subject ?firstaction)
		(predicate <http://example.com/as-expression>)
		(object ?nextarg))
	(test (eq ?firstaction(<http://www.w3.org/2007/rif-builtin-function#get> ?rifrestargs "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?clipsfunction) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?currentargs ?trpl:object))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?clipsfunction)
			(eq ?fct:predicate <http://example.com/add-expressions-as-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?clipsfunction)
		(predicate <http://example.com/add-expressions-as-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?rifrestargs "0^^http://www.w3.org/2001/XMLSchema#integer" ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?clipsfunction)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?clipsfunction)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?currentargs ?nextarg ))))

)
;autogenerated group rules

(defrule rule-gen4327 (declare (salience -100))
	(TripleTemplate
		(subject ?clipsfunction)
		(predicate <http://example.com/add-expressions-as-args>)
		(object ?rifrestargs))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#numeric-not-equal> "0^^http://www.w3.org/2001/XMLSchema#integer" (<http://www.w3.org/2007/rif-builtin-function#count> ?rifrestargs ) ))
		=>
(<http://white.gobo/set-graph-in-errorstate> "Translation%20of%20rif%3AAtom%20to%20testfunction%20failed." )
)

(defrule rule-gen4331 
	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktriplesubject>)
		(object ?rifsubject))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/triplevariable>)
		(object ?factvar))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/addchecktoquery>)
		(object ?query))
		(TripleTemplate
		(subject ?rifsubject)
		(predicate <http://example.com/as-expression>)
		(object ?subj))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?query) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?querylist ?trpl:object))(bind ?slotsubj (<http://white.gobo/new-blanknode>))(bind ?funccheck (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotsubj)
		(predicate <http://clips.script/member-slot-name>)
		(object "subject")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotsubj ?subj ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?query)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?querylist ?funccheck ))))
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?checktriple) (and (eq ?fct:predicate <http://example.com/checktriplesubject>)(eq ?fct:object ?rifsubject)))
		(retract ?fct))
)

(defrule rule-gen4344 
	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktriplepredicate>)
		(object ?rifpredicate))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/triplevariable>)
		(object ?factvar))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/addchecktoquery>)
		(object ?query))
		(TripleTemplate
		(subject ?rifpredicate)
		(predicate <http://example.com/as-expression>)
		(object ?pred))
		=>
(bind ?slotpred (<http://white.gobo/new-blanknode>))(bind ?funccheck (<http://white.gobo/new-blanknode>))(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?query) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?querylist ?trpl:object))	(assert 	(TripleTemplate
		(subject ?slotpred)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotpred)
		(predicate <http://clips.script/member-slot-name>)
		(object "predicate")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotpred ?pred ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?query)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?querylist ?funccheck ))))
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?checktriple) (and (eq ?fct:predicate <http://example.com/checktriplesubject>)(eq ?fct:object ?rifpredicate)))
		(retract ?fct))
)

(defrule rule-gen4357 
	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktripleobject>)
		(object ?rifobject))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/triplevariable>)
		(object ?factvar))
		(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/addchecktoquery>)
		(object ?query))
		(TripleTemplate
		(subject ?rifobject)
		(predicate <http://example.com/as-expression>)
		(object ?obj))
		=>
(bind ?funccheck (<http://white.gobo/new-blanknode>))(bind ?slotobj (<http://white.gobo/new-blanknode>))(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?query) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?querylist ?trpl:object))	(assert 	(TripleTemplate
		(subject ?slotobj)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotobj)
		(predicate <http://clips.script/member-slot-name>)
		(object "object")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?funccheck)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotobj ?obj ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?query)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?querylist ?funccheck ))))
	(do-for-all-facts ((?fct TripleTemplate)) (and (eq ?fct:subject ?checktriple) (and (eq ?fct:predicate <http://example.com/checktriplesubject>)(eq ?fct:object ?rifobject)))
		(retract ?fct))
)

(defrule rule-gen4370 
	(TripleTemplate
		(subject ?rifmember)
		(predicate <http://www.w3.org/2007/rif#instance>)
		(object ?instance))
		(TripleTemplate
		(subject ?rifmember)
		(predicate <http://www.w3.org/2007/rif#class>)
		(object ?class))
		(TripleTemplate
		(subject ?class)
		(predicate <http://example.com/as-expression>)
		(object ?exprclass))
		(TripleTemplate
		(subject ?instance)
		(predicate <http://example.com/as-expression>)
		(object ?exprinstance))
		=>
(bind ?clipsdeftemplate (<http://white.gobo/new-blanknode>))(bind ?factvar (<http://white.gobo/new-blanknode>))(bind ?query (<http://white.gobo/new-blanknode>))(bind ?checkclass (<http://white.gobo/new-blanknode>))(bind ?slotclass (<http://white.gobo/new-blanknode>))(bind ?slotinstance (<http://white.gobo/new-blanknode>))(bind ?checkmember (<http://white.gobo/new-blanknode>))(bind ?checkinstance (<http://white.gobo/new-blanknode>))(bind ?anyfactp (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifmember)
		(predicate <http://example.com/as-test-action>)
		(object ?anyfactp)))
	(assert 	(Member
		(instance ?factvar)
		(class <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?rifmember)
		(predicate <http://example.com/as-expression>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/deftemplate-name>)
		(object "Member")))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object ?factvar)))
	(assert 	(Member
		(instance ?anyfactp)
		(class <http://clips.script/AnyFactP>)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/query>)
		(object ?query)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-name>)
		(object "and")))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?checkclass ?checkinstance ))))
	(assert 	(TripleTemplate
		(subject ?checkclass)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?checkclass)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotclass ?exprclass ))))
	(assert 	(TripleTemplate
		(subject ?slotclass)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotclass)
		(predicate <http://clips.script/member-slot-name>)
		(object "class")))
	(assert 	(TripleTemplate
		(subject ?checkinstance)
		(predicate <http://clips.script/function-name>)
		(object "eq")))
	(assert 	(TripleTemplate
		(subject ?checkinstance)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?slotinstance ?exprinstance ))))
	(assert 	(TripleTemplate
		(subject ?slotinstance)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?slotinstance)
		(predicate <http://clips.script/member-slot-name>)
		(object "instance")))

)

(defrule rule-gen4383 
	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?object))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?slotkey))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?slotvalue))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
(bind ?checktriple (<http://white.gobo/new-blanknode>))(bind ?anyfactp (<http://white.gobo/new-blanknode>))(bind ?clipsdeftemplate (<http://white.gobo/new-blanknode>))(bind ?factvar (<http://white.gobo/new-blanknode>))(bind ?query (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/as-test-action>)
		(object ?anyfactp)))
	(assert 	(Member
		(instance ?factvar)
		(class <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/as-expression>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/deftemplate-name>)
		(object "TripleTemplate")))
	(assert 	(TripleTemplate
		(subject ?clipsdeftemplate)
		(predicate <http://clips.script/fact-set-member-variable>)
		(object ?factvar)))
	(assert 	(Member
		(instance ?anyfactp)
		(class <http://clips.script/AnyFactP>)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/query>)
		(object ?query)))
	(assert 	(TripleTemplate
		(subject ?anyfactp)
		(predicate <http://clips.script/fact-set-template>)
		(object ?clipsdeftemplate)))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-name>)
		(object "and")))
	(assert 	(TripleTemplate
		(subject ?query)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktriplesubject>)
		(object ?object)))
	(assert 	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktriplepredicate>)
		(object ?slotkey)))
	(assert 	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/checktripleobject>)
		(object ?slotvalue)))
	(assert 	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/triplevariable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?checktriple)
		(predicate <http://example.com/addchecktoquery>)
		(object ?query)))
	(assert 	(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/as-expression>)
		(object ?factvar)))

)

(defrule rule-gen4396 
	(Member
		(instance ?rifexists)
		(class <http://www.w3.org/2007/rif#Exists>))
		(TripleTemplate
		(subject ?rifexists)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?hastestaction))
		(TripleTemplate
		(subject ?hastestaction)
		(predicate <http://example.com/as-test-action>)
		(object ?testaction))
		=>
	(assert 	(TripleTemplate
		(subject ?rifexists)
		(predicate <http://example.com/as-test-action>)
		(object ?testaction)))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen4405 (declare (salience 15))
	(TripleTemplate
		(subject ?function)
		(predicate <http://example.com/add-args-from>)
		(object ?rifarglist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rifarglist ))
		(TripleTemplate
		(subject ?firstarg)
		(predicate <http://example.com/as-expression>)
		(object ?clipsexpression))
	(test (eq ?firstarg(<http://www.w3.org/2007/rif-builtin-function#get> ?rifarglist "0^^http://www.w3.org/2001/XMLSchema#integer" )))
		=>
(do-for-fact ((?trpl TripleTemplate))
		(and (eq ?trpl:subject ?function) (eq ?trpl:predicate <http://clips.script/function-args>))
		(bind ?functionargs ?trpl:object))	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?function)
			(eq ?fct:predicate <http://clips.script/function-args>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#append> ?functionargs ?clipsexpression ))))
	(do-for-all-facts ((?fct TripleTemplate)) 
		(and 
			(eq ?fct:subject ?function)
			(eq ?fct:predicate <http://example.com/add-args-from>))
		(retract ?fct))	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://example.com/add-args-from>)
		(object (<http://www.w3.org/2007/rif-builtin-function#remove> ?rifarglist "0^^http://www.w3.org/2001/XMLSchema#integer" ))))

)

(defrule rule-gen4412 (declare (salience 10))
	(Member
		(instance ?rifexternal)
		(class <http://www.w3.org/2007/rif#External>))
		(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?content))
		(TripleTemplate
		(subject ?content)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?rifop))
		(TripleTemplate
		(subject ?rifop)
		(predicate <http://example.com/as-expression>)
		(object ?functionsymbol))
		(TripleTemplate
		(subject ?functionsymbol)
		(predicate <http://clips.script/symbol>)
		(object ?functionname))
		(TripleTemplate
		(subject ?content)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?rifarglist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?rifarglist ))
		=>
(bind ?function (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://example.com/as-action>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ?function ))))
	(assert 	(TripleTemplate
		(subject ?rifexternal)
		(predicate <http://example.com/as-expression>)
		(object ?function)))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-name>)
		(object ?functionname)))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://clips.script/function-args>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?function)
		(predicate <http://example.com/add-args-from>)
		(object ?rifarglist)))

)
;autogenerated group rules
;autogenerated group rules

(defrule rule-gen4430 (declare (salience -100))
	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(not(exists 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode))))
	(not(exists 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsnode))))
		=>
(<http://white.gobo/set-graph-in-errorstate> (<http://www.w3.org/2007/rif-builtin-function#concat> "Missing%20binding%20for%20rif%3AVariable%20with%20name%20" ?varname ) )
)

(defrule rule-gen4440 (declare (salience -100))
	(Member
		(instance ?clipsvar)
		(class <http://clips.script/Variable>))
	(not(exists 	(TripleTemplate
		(subject ?clipsvar)
		(predicate <http://clips.script/variable-name>)
		(object ?varname))))
	(not(exists 	(TripleTemplate
		(subject ?clipsvar)
		(predicate <http://clips.script/var-as-const-expr>)
		(object ?varname))))
		=>
(<http://white.gobo/set-graph-in-errorstate> "A%20cs%3AVariable%20has%20no%20expression.%20missing%20cs%3Avariable-name%20or%20cs%3Avar-as-const-expr." )
)

(defrule rule-gen4449 (declare (salience -100))
	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsvar))
	(not(exists 	(TripleTemplate
		(subject ?rifvarchild)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar))))
		=>
(<http://white.gobo/set-graph-in-errorstate> (<http://www.w3.org/2007/rif-builtin-function#concat> "Missing%20use%20for%20variable%20with%20name%20" ?varname ) )
)
;autogenerated group rules

(defrule rule-gen4459 
	(Member
		(instance ?factvar)
		(class <http://example.com/Unknown-Variable>))
		(Atom
		(op <http://example.com/currentfactindex>)
		(args ?factindex ))
	(not(exists 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object ?factname))))
		=>
	(do-for-all-facts ((?fct Atom)) (and (eq ?fct:op <http://example.com/currentfactindex>) (eq ?fct:args (eq ?fct:args (create$  ?factindex))))
		(retract ?fct))	(assert 	(Atom
		(op <http://example.com/currentfactindex>)
		(args (<http://www.w3.org/2007/rif-builtin-function#numeric-add> ?factindex "1^^http://www.w3.org/2001/XMLSchema#integer" ) )))
	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object (<http://www.w3.org/2007/rif-builtin-function#concat> "fct" ?factindex ))))

)

(defrule rule-gen4467 
	(Member
		(instance ?factvar)
		(class <http://clips.script/Variable>))
		(Atom
		(op <http://example.com/currentfactindex>)
		(args ?factindex ))
	(not(exists 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object ?factname))))
	(or 	(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Member>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Subclass>))
		(Member
		(instance ?rifformula)
		(class <http://www.w3.org/2007/rif#Equal>))
	)
		(TripleTemplate
		(subject ?rifformula)
		(predicate <http://example.com/as-expression>)
		(object ?factvar))
		=>
	(do-for-all-facts ((?fct Atom)) (and (eq ?fct:op <http://example.com/currentfactindex>) (eq ?fct:args (eq ?fct:args (create$  ?factindex))))
		(retract ?fct))	(assert 	(Atom
		(op <http://example.com/currentfactindex>)
		(args (<http://www.w3.org/2007/rif-builtin-function#numeric-add> ?factindex "1^^http://www.w3.org/2001/XMLSchema#integer" ) )))
	(assert 	(TripleTemplate
		(subject ?factvar)
		(predicate <http://clips.script/variable-name>)
		(object (<http://www.w3.org/2007/rif-builtin-function#concat> "fct" ?factindex ))))

)
(deffacts rule-gen4488
		(Atom
		(op <http://example.com/currentfactindex>)
		(args "1^^http://www.w3.org/2001/XMLSchema#integer" )))

;autogenerated group rules

(defrule rule-gen4489 
(or 	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#formula>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#if>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#then>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#target>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#content>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#op>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#payload>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#pattern>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#left>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#right>)
		(object ?child))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#rest>)
		(object ?child))
	)
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child)))

)

(defrule rule-gen4526 
	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?childkey))
		(TripleTemplate
		(subject ?slot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?childvalue))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?slot ))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?childkey)))
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?childvalue)))

)

(defrule rule-gen4536 
(or 	(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#sentences>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#formulas>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#actions>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#args>)
		(object ?childlist))
		(TripleTemplate
		(subject ?parent)
		(predicate <http://www.w3.org/2007/rif#items>)
		(object ?childlist))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?childlist ))
	(or 	(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Group>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Forall>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Frame>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Atom>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Assert>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Retract>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Do>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Modify>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Subclass>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Equal>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Member>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Var>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Const>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#And>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#INeg>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Or>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Not>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Exists>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#External>))
		(Member
		(instance ?child)
		(class <http://www.w3.org/2007/rif#Execute>))
	)
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?childlist ?child ))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child)))

)

(defrule rule-gen4592 
	(TripleTemplate
		(subject ?rifdo)
		(predicate <http://www.w3.org/2007/rif#actionVar>)
		(object ?actionvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?actionvar ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(Member
		(instance ?rifframe)
		(class <http://www.w3.org/2007/rif#Frame>))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifvar ))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifframe ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifframe)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifdo)))

)

(defrule rule-gen4601 
	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?child))
		(TripleTemplate
		(subject ?child)
		(predicate <http://example.com/inherits-data>)
		(object ?grandchild))
		=>
	(assert 	(TripleTemplate
		(subject ?parent)
		(predicate <http://example.com/inherits-data>)
		(object ?grandchild)))

)
;autogenerated group rules

(defrule rule-gen4608 
	(TripleTemplate
		(subject ?rifdo)
		(predicate <http://www.w3.org/2007/rif#actionVar>)
		(object ?actionvar))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?actionvar ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?actionvar ?rifvar ))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifdo)))

)

(defrule rule-gen4615 
	(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#vars>)
		(object ?varlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?varlist ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?varlist ?rifvar ))
		=>
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifforall)))

)

(defrule rule-gen4622 
	(Member
		(instance ?rifforall)
		(class <http://www.w3.org/2007/rif#Forall>))
		(TripleTemplate
		(subject ?rifforall)
		(predicate <http://www.w3.org/2007/rif#vars>)
		(object ?varlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?varlist ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?varlist ?rifvar ))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(Member
		(instance ?clipsnode)
		(class <http://clips.script/Variable>)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen4631 
	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsvar))
		(TripleTemplate
		(subject ?clipspattern)
		(predicate <http://clips.script/constraint>)
		(object ?clipsvar))
		=>
	(assert 	(TripleTemplate
		(subject ?clipsvar)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))

)

(defrule rule-gen4641 
	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsvar))
		(TripleTemplate
		(subject ?clipspattern)
		(predicate <http://clips.script/constraints>)
		(object ?constraintlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?constraintlist ?clipsvar ))
		=>
	(assert 	(TripleTemplate
		(subject ?clipsvar)
		(predicate <http://clips.script/variable-name>)
		(object ?varname)))

)

(defrule rule-gen4651 
	(Member
		(instance ?rifexists)
		(class <http://www.w3.org/2007/rif#Exists>))
		(TripleTemplate
		(subject ?rifexists)
		(predicate <http://www.w3.org/2007/rif#vars>)
		(object ?varlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?varlist ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?varlist ?rifvar ))
	(not(exists 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?expr))))
		(TripleTemplate
		(subject ?rifvarchild)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifvarchild))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#object>)
		(object ?rifvarchild))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/as-expression>)
		(object ?factvar))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/member-slot-name>)
		(object "subject")))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen4675 
	(Member
		(instance ?rifexists)
		(class <http://www.w3.org/2007/rif#Exists>))
		(TripleTemplate
		(subject ?rifexists)
		(predicate <http://www.w3.org/2007/rif#vars>)
		(object ?varlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?varlist ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?varlist ?rifvar ))
	(not(exists 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?expr))))
		(TripleTemplate
		(subject ?rifvarchild)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifvarchild))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
		(TripleTemplate
		(subject ?rifslot)
		(predicate <http://www.w3.org/2007/rif#slotkey>)
		(object ?rifvarchild))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?rifslot ))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/as-expression>)
		(object ?factvar))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/member-slot-name>)
		(object "predicate")))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen4702 
	(Member
		(instance ?rifexists)
		(class <http://www.w3.org/2007/rif#Exists>))
		(TripleTemplate
		(subject ?rifexists)
		(predicate <http://www.w3.org/2007/rif#vars>)
		(object ?varlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?varlist ))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?varlist ?rifvar ))
	(not(exists 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?expr))))
		(TripleTemplate
		(subject ?rifvarchild)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/inherits-data>)
		(object ?rifvarchild))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://www.w3.org/2007/rif#slots>)
		(object ?slotlist))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#is-list> ?slotlist ))
		(TripleTemplate
		(subject ?rifslot)
		(predicate <http://www.w3.org/2007/rif#slotvalue>)
		(object ?rifvarchild))
	(test (<http://www.w3.org/2007/rif-builtin-predicate#list-contains> ?slotlist ?rifslot ))
		(TripleTemplate
		(subject ?rifframe)
		(predicate <http://example.com/as-expression>)
		(object ?factvar))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifvar)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/member-variable>)
		(object ?factvar)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/member-slot-name>)
		(object "object")))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen4729 
	(TripleTemplate
		(subject ?varparent)
		(predicate <http://example.com/inherits-data>)
		(object ?varchild))
		(TripleTemplate
		(subject ?varparent)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?varchild)
		(predicate <http://www.w3.org/2007/rif#varname>)
		(object ?varname))
		(TripleTemplate
		(subject ?varparent)
		(predicate <http://example.com/provides-expression>)
		(object ?clipsvar))
		=>
	(assert 	(TripleTemplate
		(subject ?varchild)
		(predicate <http://example.com/as-expression>)
		(object ?clipsvar)))
	(assert 	(TripleTemplate
		(subject ?varchild)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsvar)))

)
;autogenerated group rules

(defrule rule-gen4742 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#value>)
		(object ?value))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/string>)
		(object (<http://white.gobo/literal-to-clipsconstant> ?value ))))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen4746 
	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://www.w3.org/2007/rif#constIRI>)
		(object ?iristring))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?rifnode)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/symbol>)
		(object (<http://white.gobo/iri-to-clipsconstant> ?iristring ))))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://example.com/as-constraint-needs-additional-conditionals>)
		(object (<http://www.w3.org/2007/rif-builtin-function#make-list> ))))

)

(defrule rule-gen4750 
	(Member
		(instance ?rifdocument)
		(class <http://www.w3.org/2007/rif#Document>))
		(TripleTemplate
		(subject ?rifdocument)
		(predicate <http://example.com/inherits-data>)
		(object ?riflocal))
		(TripleTemplate
		(subject ?riflocal)
		(predicate <http://www.w3.org/2007/rif#constname>)
		(object ?name))
		=>
(bind ?clipsnode (<http://white.gobo/new-blanknode>))	(assert 	(TripleTemplate
		(subject ?riflocal)
		(predicate <http://example.com/as-constraint>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?riflocal)
		(predicate <http://example.com/as-expression>)
		(object ?clipsnode)))
	(assert 	(TripleTemplate
		(subject ?clipsnode)
		(predicate <http://clips.script/symbol>)
		(object (<http://white.gobo/local-to-clipsconstant> ?rifdocument ?name ))))

)

